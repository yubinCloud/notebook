(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{951:function(s,t,a){"use strict";a.r(t);var e=a(22),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1-认识微服务"}},[s._v("1. 认识微服务")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-1-单体架构与分布式架构"}},[s._v("1.1 单体架构与分布式架构")])]),a("li",[a("a",{attrs:{href:"#_1-2-微服务"}},[s._v("1.2 微服务")])]),a("li",[a("a",{attrs:{href:"#_1-3-spring-cloud"}},[s._v("1.3 Spring Cloud")])])])]),a("li",[a("a",{attrs:{href:"#_2-服务拆分和远程调用"}},[s._v("2. 服务拆分和远程调用")]),a("ul",[a("li",[a("a",{attrs:{href:"#_2-1-服务拆分原则"}},[s._v("2.1 服务拆分原则")])]),a("li",[a("a",{attrs:{href:"#_2-2-服务拆分示例"}},[s._v("2.2 服务拆分示例")])]),a("li",[a("a",{attrs:{href:"#_2-3-远程调用案例"}},[s._v("2.3 远程调用案例")])]),a("li",[a("a",{attrs:{href:"#_2-4-提供者与消费者"}},[s._v("2.4 提供者与消费者")])])])]),a("li",[a("a",{attrs:{href:"#_3-eureka-注册中心"}},[s._v("3. Eureka 注册中心")]),a("ul",[a("li",[a("a",{attrs:{href:"#_3-1-eureka-的结构和作用"}},[s._v("3.1 Eureka 的结构和作用")])]),a("li",[a("a",{attrs:{href:"#_3-2-搭建-eureka-server"}},[s._v("3.2 搭建 Eureka Server")])]),a("li",[a("a",{attrs:{href:"#_3-3-服务注册"}},[s._v("3.3 服务注册")])]),a("li",[a("a",{attrs:{href:"#_3-4-服务发现"}},[s._v("3.4 服务发现")])])])]),a("li",[a("a",{attrs:{href:"#_4-ribbon-负载均衡"}},[s._v("4. Ribbon 负载均衡")]),a("ul",[a("li",[a("a",{attrs:{href:"#_4-1-原理分析"}},[s._v("4.1 原理分析")])]),a("li",[a("a",{attrs:{href:"#_4-2-负载均衡策略"}},[s._v("4.2 负载均衡策略")])]),a("li",[a("a",{attrs:{href:"#_4-3-饥饿加载"}},[s._v("4.3 饥饿加载")])])])]),a("li",[a("a",{attrs:{href:"#_5-nacos-注册中心"}},[s._v("5. Nacos 注册中心")]),a("ul",[a("li",[a("a",{attrs:{href:"#_5-1-服务注册到-nacos"}},[s._v("5.1 服务注册到 nacos")])]),a("li",[a("a",{attrs:{href:"#_5-2-服务分级存储模型"}},[s._v("5.2 服务分级存储模型")])]),a("li",[a("a",{attrs:{href:"#_5-3-权重配置"}},[s._v("5.3 权重配置")])]),a("li",[a("a",{attrs:{href:"#_5-4-环境隔离"}},[s._v("5.4 环境隔离")])]),a("li",[a("a",{attrs:{href:"#_5-5-nacos-与-eureka-的区别"}},[s._v("5.5 Nacos 与 Eureka 的区别")])])])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"_1-认识微服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-认识微服务"}},[s._v("#")]),s._v(" 1. 认识微服务")]),s._v(" "),a("h3",{attrs:{id:"_1-1-单体架构与分布式架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-单体架构与分布式架构"}},[s._v("#")]),s._v(" 1.1 单体架构与分布式架构")]),s._v(" "),a("p",[a("strong",[s._v("单体架构")]),s._v("：将业务的所有功能集中在一个项目中开发，打成一个包部署。")]),s._v(" "),a("ul",[a("li",[s._v("优点：架构简单，部署成本低")]),s._v(" "),a("li",[s._v("缺点：耦合度高（维护困难、升级困难）")])]),s._v(" "),a("p",[a("strong",[s._v("分布式架构")]),s._v("：根据业务功能对系统做拆分，每个业务功能模块作为独立项目开发，称为一个服务。")]),s._v(" "),a("ul",[a("li",[s._v("优点：降低服务耦合，有利于服务升级和拓展")]),s._v(" "),a("li",[s._v("缺点：服务调用关系错综复杂")])]),s._v(" "),a("p",[s._v("分布式架构虽然降低了服务耦合，但是服务拆分时也有很多问题需要思考：")]),s._v(" "),a("ul",[a("li",[s._v("服务拆分的粒度如何界定？")]),s._v(" "),a("li",[s._v("服务之间如何调用？")]),s._v(" "),a("li",[s._v("服务的调用关系如何管理？")])]),s._v(" "),a("h3",{attrs:{id:"_1-2-微服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-微服务"}},[s._v("#")]),s._v(" 1.2 微服务")]),s._v(" "),a("p",[s._v("微服务的架构特征：")]),s._v(" "),a("ul",[a("li",[s._v("单一职责：微服务拆分粒度更小，每一个服务都对应唯一的业务能力，做到单一职责")]),s._v(" "),a("li",[s._v("自治：团队独立、技术独立、数据独立，独立部署和交付")]),s._v(" "),a("li",[s._v("面向服务：服务提供统一标准的接口，与语言和技术无关")]),s._v(" "),a("li",[s._v("隔离性强：服务调用做好隔离、容错、降级，避免出现级联问题")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220305200314698.png",alt:"image-20220305200314698"}})]),s._v(" "),a("p",[s._v("可以认为"),a("strong",[s._v("微服务")]),s._v("是一种经过良好架构设计的"),a("strong",[s._v("分布式架构方案")]),s._v(" 。")]),s._v(" "),a("h3",{attrs:{id:"_1-3-spring-cloud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-spring-cloud"}},[s._v("#")]),s._v(" 1.3 Spring Cloud")]),s._v(" "),a("p",[s._v("Spring Cloud 集成了各种微服务功能组件，并基于 Spring Boot 实现了这些组件的自动装配，从而提供了良好的开箱即用体验。常见的组件如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713204155887.png",alt:"image-20210713204155887"}})]),s._v(" "),a("p",[s._v("我们所学的版本是 Spring Cloud Hoxton.SR10，对应的 Spring Boot 版本是2.3.x版本。")]),s._v(" "),a("p",[s._v("微服务技术对比：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}}),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("Dubbo")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("Spring Cloud")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("Spring Cloud Alibaba")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("注册中心")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("zookeeper、Redis")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Eureka、Consul")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Nacos、Eureka")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("服务远程调用")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Dubbo协议")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Feign（http协议）")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Dubbo、Feign")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("配置中心")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("无")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Spring Cloud Config")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Spring Cloud Config、Nacos")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("服务网关")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("无")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Spring Cloud Gateway、Zuul")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Spring Cloud Gateway、Zuul")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("服务监控和保护")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("dubbo-admin，功能弱")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Hystix")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("Sentinel")])])])]),s._v(" "),a("p",[s._v("企业常见应用情况：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220305201206613.png",alt:"image-20220305201206613"}})]),s._v(" "),a("h2",{attrs:{id:"_2-服务拆分和远程调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务拆分和远程调用"}},[s._v("#")]),s._v(" 2. 服务拆分和远程调用")]),s._v(" "),a("h3",{attrs:{id:"_2-1-服务拆分原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-服务拆分原则"}},[s._v("#")]),s._v(" 2.1 服务拆分原则")]),s._v(" "),a("ul",[a("li",[s._v("不同微服务，不要重复开发相同业务")]),s._v(" "),a("li",[s._v("微服务数据独立，不要访问其它微服务的数据库")]),s._v(" "),a("li",[s._v("微服务可以将自己的业务暴露为接口，供其它微服务调用")])]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713210800950.png",alt:"image-20210713210800950"}}),s._v(" "),a("h3",{attrs:{id:"_2-2-服务拆分示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-服务拆分示例"}},[s._v("#")]),s._v(" 2.2 服务拆分示例")]),s._v(" "),a("p",[s._v("有一个 cloud-demo 工程，里面有两个微服务：")]),s._v(" "),a("ul",[a("li",[s._v("order-service：订单微服务，负责订单相关业务")]),s._v(" "),a("li",[s._v("user-service：用户微服务，负责用户相关业务")])]),s._v(" "),a("p",[s._v("要求：")]),s._v(" "),a("ul",[a("li",[s._v("订单微服务和用户微服务"),a("strong",[s._v("都必须有各自的数据库")]),s._v("，相互独立")]),s._v(" "),a("li",[s._v("订单服务和用户服务"),a("strong",[s._v("都对外暴露 Restful 的接口")])]),s._v(" "),a("li",[s._v("订单服务如果需要查询用户信息，只能调用用户服务的 Restful 接口，不能查询用户数据库")])]),s._v(" "),a("p",[s._v("项目结构：")]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220305202451471.png",alt:"image-20220305202451471"}}),s._v(" "),a("blockquote",[a("p",[s._v("用 IDEA 打开后，可以在 Services 一栏中看到所有的微服务：")]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220305203644409.png",alt:"image-20220305203644409"}})]),s._v(" "),a("h3",{attrs:{id:"_2-3-远程调用案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-远程调用案例"}},[s._v("#")]),s._v(" 2.3 远程调用案例")]),s._v(" "),a("p",[s._v("在 order-service 服务中，有一个根据 id 查询订单的接口，在 user-service 中有一个根据 id 查询用户的接口。现在我们想修改 order-service 中的根据 id 查询订单业务，要求在查询订单的同时，根据订单中包含的 userId 查询出用户信息，一起返回：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713213312278.png",alt:"image-20210713213312278"}})]),s._v(" "),a("p",[s._v("因此，我们需要在 order-service 中，向 user-service 发起一个 http 的请求，调用"),a("code",[s._v("http://localhost:8081/user/{userId}")]),s._v("这个接口。大致步骤：")]),s._v(" "),a("ul",[a("li",[s._v("注册一个 RestTemplate 的实例到 Spring 容器")]),s._v(" "),a("li",[s._v("修改 order-service 服务中的 OrderService 类中的 queryOrderById 方法，根据Order对象中的 userId 查询 User")]),s._v(" "),a("li",[s._v("将查询的 User 填充到 Order 对象，一起返回")])]),s._v(" "),a("h4",{attrs:{id:"_1-注册-resttemplate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-注册-resttemplate"}},[s._v("#")]),s._v(" 1）注册 RestTemplate")]),s._v(" "),a("p",[s._v("注入一个 RestTemplate 的 Bean：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("web"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestTemplate")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestTemplate")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("restTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h4",{attrs:{id:"_2-实现远程调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现远程调用"}},[s._v("#")]),s._v(" 2）实现远程调用")]),s._v(" "),a("p",[s._v("修改 order-service 服务中的 OrderService 类中的 queryOrderById 方法：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Service")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderService")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderMapper")]),s._v(" orderMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestTemplate")]),s._v(" restTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("queryOrderById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" orderId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.查询订单")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Order")]),s._v(" order "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" orderMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("findById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("orderId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.利用RestTemplate发起http请求，查询用户")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.1.url路径")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost:8081/user/"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getUserId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.2.发送http请求，实现远程调用")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" restTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getForObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.封装user到Order")]),s._v("\n        order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4.返回")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h3",{attrs:{id:"_2-4-提供者与消费者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-提供者与消费者"}},[s._v("#")]),s._v(" 2.4 提供者与消费者")]),s._v(" "),a("p",[a("strong",[s._v("服务提供者")]),s._v("：一次业务中，被其它微服务调用的服务。（提供接口给其它微服务）")]),s._v(" "),a("p",[a("strong",[s._v("服务消费者")]),s._v("：一次业务中，调用其它微服务的服务。（调用其它微服务提供的接口）")]),s._v(" "),a("p",[s._v("服务提供者与服务消费者的"),a("strong",[s._v("角色并不是绝对的")]),s._v("，而是相对于业务而言。一个服务既可以是提供者，也可以是消费者。")]),s._v(" "),a("h2",{attrs:{id:"_3-eureka-注册中心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-eureka-注册中心"}},[s._v("#")]),s._v(" 3. Eureka 注册中心")]),s._v(" "),a("h3",{attrs:{id:"_3-1-eureka-的结构和作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-eureka-的结构和作用"}},[s._v("#")]),s._v(" 3.1 Eureka 的结构和作用")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713220104956.png",alt:"image-20210713220104956"}})]),s._v(" "),a("p",[s._v("🖊 "),a("strong",[s._v("问题 1")]),s._v("：order-service 如何得知 user-service 实例地址？")]),s._v(" "),a("ul",[a("li",[s._v("user-service 服务实例启动后，将自己的信息注册到 eureka-server（Eureka服务端），这个叫"),a("strong",[s._v("服务注册")]),s._v("。")]),s._v(" "),a("li",[s._v("eureka-server 保存"),a("strong",[s._v("服务名称到服务实例地址")]),s._v("列表的映射关系")]),s._v(" "),a("li",[s._v("order-service 根据服务名称，拉取实例地址列表。这个叫"),a("strong",[s._v("服务发现")]),s._v("或服务拉取。")])]),s._v(" "),a("p",[s._v("🖊 "),a("strong",[s._v("问题 2")]),s._v("：order-service 如何从多个 user-service 实例中选择具体的实例？")]),s._v(" "),a("ul",[a("li",[s._v("服务消费者利用负载均衡算法，从服务列表中挑选一个")])]),s._v(" "),a("p",[s._v("🖊 "),a("strong",[s._v("问题 3")]),s._v("：order-service 如何得知某个 user-service 实例是否依然健康，是不是已经宕机？")]),s._v(" "),a("ul",[a("li",[s._v("user-service 会每隔一段时间（默认30秒）向 eureka-server 发起请求，报告自己状态，称为"),a("strong",[s._v("心跳")])]),s._v(" "),a("li",[s._v("当超过一定时间没有发送心跳时，eureka-server 会认为微服务实例故障，将该实例从服务列表中剔除")]),s._v(" "),a("li",[s._v("order-service 拉取服务时，就能将故障实例排除了")])]),s._v(" "),a("h3",{attrs:{id:"_3-2-搭建-eureka-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-搭建-eureka-server"}},[s._v("#")]),s._v(" 3.2 搭建 Eureka Server")]),s._v(" "),a("p",[s._v("首先大家注册中心服务端：eureka-server，这必须是一个独立的微服务。")]),s._v(" "),a("h4",{attrs:{id:"_1-创建-eureka-server-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建-eureka-server-服务"}},[s._v("#")]),s._v(" 1）创建 eureka-server 服务")]),s._v(" "),a("p",[s._v("在 cloud-demo 父工程下，创建一个子模块并填写相关信息：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713220605881.png",alt:"image-20210713220605881"}})]),s._v(" "),a("p",[s._v("该服务可以命名为 "),a("code",[s._v("eureka-server")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"_2-引入-eureka-依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-引入-eureka-依赖"}},[s._v("#")]),s._v(" 2）引入 Eureka 依赖")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.springframework.cloud"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-cloud-starter-netflix-eureka-server"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"_3-编写启动类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-编写启动类"}},[s._v("#")]),s._v(" 3）编写启动类")]),s._v(" "),a("p",[s._v("给 eureka-server 服务编写一个启动类，一定要添加一个 "),a("strong",[s._v("@EnableEurekaServer")]),s._v(" 注解，开启 eureka 的注册中心功能：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("cn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("itcast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eureka")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("boot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SpringApplication")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("boot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("autoconfigure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SpringBootApplication")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cloud"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("netflix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eureka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EnableEurekaServer")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@SpringBootApplication")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@EnableEurekaServer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EurekaApplication")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SpringApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EurekaApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h4",{attrs:{id:"_4-编写配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-编写配置文件"}},[s._v("#")]),s._v(" 4）编写配置文件")]),s._v(" "),a("p",[s._v("编写一个 application.yml 文件，内容如下：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10086")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" eureka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("server\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("eureka")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("client")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("service-url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("defaultZone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("10086/eureka\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("Eureka 由于自己本身也是一个微服务，所有自己也会将自己注册进去。")])]),s._v(" "),a("h4",{attrs:{id:"_5-启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-启动服务"}},[s._v("#")]),s._v(" 5）启动服务")]),s._v(" "),a("p",[s._v("启动微服务，然后在浏览器访问："),a("code",[s._v("http://127.0.0.1:10086")])]),s._v(" "),a("p",[s._v("看到下面结果应该是成功了：")]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713222157190.png",alt:"image-20210713222157190"}}),s._v(" "),a("h3",{attrs:{id:"_3-3-服务注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-服务注册"}},[s._v("#")]),s._v(" 3.3 服务注册")]),s._v(" "),a("p",[s._v("下面，我们将 user-service 注册到 eureka-server 中去。")]),s._v(" "),a("h4",{attrs:{id:"_1-引入依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入依赖"}},[s._v("#")]),s._v(" 1）引入依赖")]),s._v(" "),a("p",[s._v("在 user-service 的pom文件中，引入下面的 eureka-client 依赖：")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.springframework.cloud"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-cloud-starter-netflix-eureka-client"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("注意刚刚的是 Eureka server 端，现在的是 client 端。")])]),s._v(" "),a("h4",{attrs:{id:"_2-配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置文件"}},[s._v("#")]),s._v(" 2）配置文件")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" userservice  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该服务的名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("eureka")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("client")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("service-url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Eureka 的地址信息")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("defaultZone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("10086/eureka\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("到此，该服务就被注册进 Eureka 中了。其他服务的配置也类似。")]),s._v(" "),a("h4",{attrs:{id:"_3-启动多个-user-service-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-启动多个-user-service-实例"}},[s._v("#")]),s._v(" 3）启动多个 user-service 实例")]),s._v(" "),a("p",[s._v("为了演示一个服务有多个实例的场景，我们添加一个 Spring Boot 的启动配置，再启动一个 user-service。")]),s._v(" "),a("p",[s._v("首先，复制原来的 user-service 启动配置：")]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713222656562.png",alt:"image-20210713222656562"}}),s._v(" "),a("p",[s._v("然后，在弹出的窗口中，填写信息：")]),s._v(" "),a("img",{staticStyle:{zoom:"40%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713222757702.png",alt:"image-20210713222757702"}}),s._v(" "),a("p",[s._v("现在，Spring Boot 窗口会出现两个 user-service 启动配置：")]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713222841951.png",alt:"image-20210713222841951"}}),s._v(" "),a("p",[s._v("不过，第一个是 8081 端口，第二个是 8082 端口。")]),s._v(" "),a("p",[s._v("启动两个 user-service 实例：")]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713223041491.png",alt:"image-20210713223041491"}}),s._v(" "),a("p",[s._v("查看 eureka-server 管理页面：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713223150650.png",alt:"image-20210713223150650"}})]),s._v(" "),a("h3",{attrs:{id:"_3-4-服务发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-服务发现"}},[s._v("#")]),s._v(" 3.4 服务发现")]),s._v(" "),a("p",[s._v("最后，我们要去 eureka-server 中拉取 user-service 服务的实例列表，并且实现负载均衡。不过这些动作不用我们去做，"),a("u",[s._v("只需要添加一些注解即可")]),s._v("。")]),s._v(" "),a("p",[s._v("在 order-service 的 OrderApplication 中，给 RestTemplate 这个 Bean 添加一个 "),a("strong",[s._v("@LoadBalanced")]),s._v(" 注解：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@MapperScan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cn.itcast.order.mapper"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@SpringBootApplication")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderApplication")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SpringApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OrderApplication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 创建RestTemplate并注入Spring容器\n     */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@LoadBalanced")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestTemplate")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("restTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("修改 order-service 服务中的 cn.itcast.order.service 包下的 OrderService 类中的 queryOrderById 方法。修改访问的 url 路径，"),a("strong",[s._v("用服务名代替 ip 和端口")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-diff line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[s._v("@Service\npublic class OrderService {\n\n"),a("span",{pre:!0,attrs:{class:"token unchanged"}},[a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("   @Autowired\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("   private OrderMapper orderMapper;\n")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token unchanged"}},[a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("   @Autowired\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("   private RestTemplate restTemplate;\n")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token unchanged"}},[a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("   public Order queryOrderById(Long orderId) {\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       // 1.查询订单\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       Order order = orderMapper.findById(orderId);\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       // 2.利用RestTemplate发起http请求，查询用户\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       // 2.1.url 路径\n")])]),a("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[a("span",{pre:!0,attrs:{class:"token prefix deleted"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v('        String url = "http://localhost:8081/user/" + order.getUserId();\n')])]),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v('        String url = "http://userservice/user/" + order.getUserId();\n')])]),a("span",{pre:!0,attrs:{class:"token unchanged"}},[a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       // 2.2.发送http请求，实现远程调用\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       User user = restTemplate.getForObject(url, User.class);\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       // 3.封装user到Order\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       order.setUser(user);\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       // 4.返回\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("       return order;\n")]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v("   }\n")])]),s._v("}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("ul",[a("li",[s._v("注意请求的 URL 的变化，"),a("strong",[s._v("用服务名代替 ip 和端口")]),s._v("，这个服务名就是注册入 Eureka 中的。")])]),s._v(" "),a("p",[a("strong",[s._v("Spring 会自动帮助我们从 eureka-server 端，根据 userservice 这个服务名称，获取实例列表，而后完成负载均衡")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"_4-ribbon-负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-ribbon-负载均衡"}},[s._v("#")]),s._v(" 4. Ribbon 负载均衡")]),s._v(" "),a("p",[s._v("Spring Cloud 底层其实是利用了一个名为 Ribbon 的组件，来实现负载均衡功能的。负载均衡的流程：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713224517686.png",alt:"image-20210713224517686"}})]),s._v(" "),a("h3",{attrs:{id:"_4-1-原理分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-原理分析"}},[s._v("#")]),s._v(" 4.1 原理分析")]),s._v(" "),a("p",[s._v("分析源码后，可以看到 Ribbon 的底层采用了一个"),a("strong",[s._v("拦截器")]),s._v("，拦截了 RestTemplate 发出的请求，对地址做了修改。用一幅图来总结一下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713224724673.png",alt:"image-20210713224724673"}})]),s._v(" "),a("p",[s._v("基本流程如下：")]),s._v(" "),a("ul",[a("li",[s._v("拦截我们的 RestTemplate 请求 "),a("code",[s._v("http://userservice/user/1")])]),s._v(" "),a("li",[s._v("RibbonLoadBalancerClient 会从请求 url 中获取服务名称，也就是 user-service")]),s._v(" "),a("li",[s._v("DynamicServerListLoadBalancer 根据 user-service 到 eureka 拉取服务列表")]),s._v(" "),a("li",[s._v("eureka 返回列表，localhost:8081、localhost:8082")]),s._v(" "),a("li",[s._v("IRule 利用内置负载均衡规则，从列表中选择一个，例如 localhost:8081")]),s._v(" "),a("li",[s._v("RibbonLoadBalancerClient 修改请求地址，用 localhost:8081 替代 userservice，得到 "),a("code",[s._v("http://localhost:8081/user/1")]),s._v("，发起真实请求")])]),s._v(" "),a("h3",{attrs:{id:"_4-2-负载均衡策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-负载均衡策略"}},[s._v("#")]),s._v(" 4.2 负载均衡策略")]),s._v(" "),a("h4",{attrs:{id:"_4-2-1-自带的负载均衡策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-自带的负载均衡策略"}},[s._v("#")]),s._v(" 4.2.1 自带的负载均衡策略")]),s._v(" "),a("p",[s._v("负载均衡的规则都定义在 "),a("strong",[s._v("IRule 接口")]),s._v("中，而 IRule 有很多不同的实现类，代表了不同的规则。不同规则的含义如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[a("strong",[s._v("内置负载均衡规则类")])]),s._v(" "),a("th",[a("strong",[s._v("规则描述")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("RoundRobinRule")]),s._v(" "),a("td",[a("strong",[s._v("简单轮询")]),s._v("服务列表来选择服务器。它是 Ribbon "),a("strong",[s._v("默认的")]),s._v("负载均衡规则。")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("AvailabilityFilteringRule")]),s._v(" "),a("td",[s._v("对以下两种服务器进行忽略：   （1）在默认情况下，这台服务器如果3次连接失败，这台服务器就会被设置为“短路”状态。短路状态将持续30秒，如果再次连接失败，短路的持续时间就会几何级地增加。  （2）并发数过高的服务器。如果一个服务器的并发连接数过高，配置了AvailabilityFilteringRule规则的客户端也会将其忽略。并发连接数的上限，可以由客户端的 "),a("code",[s._v("<clientName>.<clientConfigNameSpace>.ActiveConnectionsLimit")]),s._v(" 属性进行配置。")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("WeightedResponseTimeRule")]),s._v(" "),a("td",[s._v("为每一个服务器赋予一个"),a("strong",[s._v("权重值")]),s._v("。服务器响应时间越长，这个服务器的权重就越小。这个规则会随机选择服务器，这个权重值会影响服务器的选择。")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("ZoneAvoidanceRule")]),s._v(" "),a("td",[s._v("以区域可用的服务器为基础进行服务器的选择。使用Zone对服务器进行分类，这个Zone可以理解为一个机房、一个机架等。而后再"),a("strong",[s._v("对 Zone 内的多个服务做轮询")]),s._v("。")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("BestAvailableRule")]),s._v(" "),a("td",[s._v("忽略那些短路的服务器，并选择并发数较低的服务器。")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("RandomRule")]),s._v(" "),a("td",[a("strong",[s._v("随机")]),s._v("选择一个可用的服务器。")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("RetryRule")]),s._v(" "),a("td",[a("strong",[s._v("重试")]),s._v("机制的选择逻辑")])])])]),s._v(" "),a("ul",[a("li",[s._v("正常情况下，"),a("strong",[s._v("采用默认的策略即可")]),s._v("。")])]),s._v(" "),a("h4",{attrs:{id:"_4-2-2-自定义负载均衡策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-自定义负载均衡策略"}},[s._v("#")]),s._v(" 4.2.2 自定义负载均衡策略")]),s._v(" "),a("p",[s._v("通过定义 IRule 实现可以修改负载均衡规则，有两种方式：")]),s._v(" "),a("p",[s._v("🖊 "),a("strong",[s._v("方式1 —— 代码方式")]),s._v("：在 order-service 中的 OrderApplication 类中，定义一个新的 IRule：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IRule")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("randomRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RandomRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("🖊 "),a("strong",[s._v("方式2 —— 配置文件方式")]),s._v("：在 order-service 的 application.yml 文件中，添加新的配置也可以修改规则：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("userservice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给某个微服务配置负载均衡规则")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ribbon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("NFLoadBalancerRuleClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" com.netflix.loadbalancer.RandomRule "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 负载均衡规则 ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_4-3-饥饿加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-饥饿加载"}},[s._v("#")]),s._v(" 4.3 饥饿加载")]),s._v(" "),a("p",[s._v("Ribbon 默认是采用"),a("strong",[s._v("懒加载")]),s._v("，即第一次访问时才会去创建 LoadBalanceClient，请求时间会很长。")]),s._v(" "),a("blockquote",[a("p",[s._v("这可以在浏览器开发者工具的“网络”中看到请求时间。")])]),s._v(" "),a("p",[s._v("而"),a("strong",[s._v("饥饿加载")]),s._v("则会在项目启动时创建，降低第一次访问的耗时，通过下面配置开启饥饿加载：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ribbon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("eager-load")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启饥饿加载")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("clients")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" userservice  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定对哪个服务做饥饿加载")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("饥饿加载，顾名思义就是饥不择食，在创建之初就加载起来了。")])]),s._v(" "),a("h2",{attrs:{id:"_5-nacos-注册中心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-nacos-注册中心"}},[s._v("#")]),s._v(" 5. Nacos 注册中心")]),s._v(" "),a("p",[s._v("Nacos 是 Spring Cloud Alibaba 的组件，而 Spring Cloud Alibaba 也遵循 Spring Cloud 中定义的服务注册、服务发现规范。因此使用 Nacos 和使用 Eureka 对于微服务来说，并没有太大区别。")]),s._v(" "),a("blockquote",[a("p",[s._v("先安装单机版 Nacos")])]),s._v(" "),a("h3",{attrs:{id:"_5-1-服务注册到-nacos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-服务注册到-nacos"}},[s._v("#")]),s._v(" 5.1 服务注册到 nacos")]),s._v(" "),a("p",[s._v("与 Eureka 主要差异在于：依赖不同，服务地址不同。")]),s._v(" "),a("h4",{attrs:{id:"_1-引入依赖-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入依赖-2"}},[s._v("#")]),s._v(" 1）引入依赖")]),s._v(" "),a("p",[s._v("在cloud-demo父工程的 pom 文件中的 "),a("code",[s._v("<dependencyManagement>")]),s._v(" 中引入 Spring Cloud Alibaba 的依赖：")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("com.alibaba.cloud"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-cloud-alibaba-dependencies"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("2.2.6.RELEASE"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("pom"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("import"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("然后在 user-service 和 order-service 中的 pom 文件中引入 nacos-discovery 依赖：")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("com.alibaba.cloud"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-cloud-starter-alibaba-nacos-discovery"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("注意不要忘了注释掉 eureka 的依赖。")])]),s._v(" "),a("h4",{attrs:{id:"_2-配置-nacos-地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置-nacos-地址"}},[s._v("#")]),s._v(" 2）配置 nacos 地址")]),s._v(" "),a("p",[s._v("在 user-service 和 order-service 的 application.yml 中添加 nacos 地址：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nacos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("server-addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8848")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("不要忘了注释掉eureka的地址")])]),s._v(" "),a("h4",{attrs:{id:"_3-启动微服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-启动微服务"}},[s._v("#")]),s._v(" 3）启动微服务")]),s._v(" "),a("p",[s._v("启动微服务后，登录 nacos 管理页面，可以看到微服务信息：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713231439607.png",alt:"image-20210713231439607"}})]),s._v(" "),a("h3",{attrs:{id:"_5-2-服务分级存储模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-服务分级存储模型"}},[s._v("#")]),s._v(" 5.2 服务分级存储模型")]),s._v(" "),a("p",[s._v("一个"),a("strong",[s._v("服务")]),s._v("可以有多个"),a("strong",[s._v("实例")]),s._v("，Nacos 就将同一机房内的实例划分为一个"),a("strong",[s._v("集群")]),s._v("。也就是说，user-service 是服务，一个服务可以包含多个集群，如杭州、上海，每个集群下可以有多个实例，形成分级模型，如图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713232522531.png",alt:"image-20210713232522531"}})]),s._v(" "),a("p",[s._v("微服务互相访问时，"),a("strong",[s._v("应该尽可能访问同集群实例")]),s._v("，因为本地访问速度更快。当本集群内不可用时，才访问其它集群。")]),s._v(" "),a("h4",{attrs:{id:"_5-2-1-给-user-service-配置集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-给-user-service-配置集群"}},[s._v("#")]),s._v(" 5.2.1 给 user-service 配置集群")]),s._v(" "),a("p",[s._v("修改 user-service 的 application.yml 文件，添加集群配置：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nacos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("server-addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8848")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("discovery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cluster-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" HZ "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 集群名称")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("不同的实例，只需要修改 cluster-name 属性即可。")]),s._v(" "),a("p",[s._v("启动多个实例后，在 nacos 控制台可以看到：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713233727923.png",alt:"image-20210713233727923"}})]),s._v(" "),a("h4",{attrs:{id:"_5-2-2-同集群优先的负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-同集群优先的负载均衡"}},[s._v("#")]),s._v(" 5.2.2 同集群优先的负载均衡")]),s._v(" "),a("p",[s._v("默认的 "),a("code",[s._v("ZoneAvoidanceRule")]),s._v(" 并不能实现根据同集群优先来实现负载均衡。因此 Nacos 中提供了一个 "),a("code",[s._v("NacosRule")]),s._v(" 的实现，可以优先从同集群中挑选实例。")]),s._v(" "),a("h5",{attrs:{id:"_1-给-order-service-配置集群信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-给-order-service-配置集群信息"}},[s._v("#")]),s._v(" 1）给 order-service 配置集群信息")]),s._v(" "),a("p",[s._v("修改 order-service 的 application.yml 文件，添加集群配置：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nacos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("server-addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8848")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("discovery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cluster-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" HZ "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 集群名称")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h5",{attrs:{id:"_2-修改负载均衡规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改负载均衡规则"}},[s._v("#")]),s._v(" 2）修改负载均衡规则")]),s._v(" "),a("p",[s._v("修改 order-service 的 application.yml 文件，修改负载均衡规则：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("userservice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ribbon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("NFLoadBalancerRuleClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" com.alibaba.cloud.nacos.ribbon.NacosRule "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 负载均衡规则 ")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("NacosRule")]),s._v(" 负载均衡策略：")]),s._v(" "),a("ol",[a("li",[s._v("优先选择同集群服务实例列表")]),s._v(" "),a("li",[s._v("本地集群找不到提供者，才去其它集群寻找，并且会报警告")]),s._v(" "),a("li",[s._v("确定了可用实例列表后，再采用随机负载均衡挑选实例")])]),s._v(" "),a("h3",{attrs:{id:"_5-3-权重配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-权重配置"}},[s._v("#")]),s._v(" 5.3 权重配置")]),s._v(" "),a("p",[s._v("实际部署中会出现这样的场景：服务器设备性能有差异，部分实例所在机器性能较好，另一些较差，"),a("strong",[s._v("我们希望性能好的机器承担更多的用户请求")]),s._v("。但默认情况下 NacosRule 是同集群内随机挑选，不会考虑机器的性能问题。因此，Nacos 提供了"),a("strong",[s._v("权重配置来控制访问频率")]),s._v("，权重越大则访问频率越高。")]),s._v(" "),a("p",[s._v("在 nacos 控制台，找到 user-service 的实例列表，点击编辑，即可修改权重：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713235133225.png",alt:"image-20210713235133225"}})]),s._v(" "),a("p",[s._v("在弹出的编辑窗口，修改权重：")]),s._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210713235235219.png",alt:"image-20210713235235219"}}),s._v(" "),a("ul",[a("li",[s._v("如果权重修改为 0，则该实例永远不会被访问。")])]),s._v(" "),a("h3",{attrs:{id:"_5-4-环境隔离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-环境隔离"}},[s._v("#")]),s._v(" 5.4 环境隔离")]),s._v(" "),a("p",[s._v("Nacos 中服务存储和数据存储的最外层都是一个名为 "),a("strong",[s._v("namespace")]),s._v(" 的东西，用来做最外层的环境隔离。")]),s._v(" "),a("ul",[a("li",[s._v("nacos 中可以有多个 namespace")]),s._v(" "),a("li",[s._v("namespace 下可以有 group、service 等")]),s._v(" "),a("li",[s._v("不同 namespace 之间相互隔离，例如不同 namespace 的服务互相不可见")])]),s._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210714000101516.png",alt:"image-20210714000101516"}}),s._v(" "),a("h4",{attrs:{id:"_5-4-1-创建-namespace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-创建-namespace"}},[s._v("#")]),s._v(" 5.4.1 创建 namespace")]),s._v(" "),a("p",[s._v("默认情况下，所有 service、data、group 都在同一个 namespace，名为 public：")]),s._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210714000414781.png",alt:"image-20210714000414781"}}),s._v(" "),a("p",[s._v("在该页面可以点击新增按钮，从而添加一个 namespace：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220306142315482.png",alt:"image-20220306142315482"}})]),s._v(" "),a("ul",[a("li",[s._v("dev 是新增加的 namespace")])]),s._v(" "),a("h4",{attrs:{id:"_5-4-2-给微服务配置-namespace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-给微服务配置-namespace"}},[s._v("#")]),s._v(" 5.4.2 给微服务配置 namespace")]),s._v(" "),a("p",[s._v("给微服务配置 namespace 只能通过修改配置来实现。")]),s._v(" "),a("p",[s._v("例如，修改 order-service 的 application.yml 文件：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nacos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("server-addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8848")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("discovery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cluster-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" HZ\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 492a7d5d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("237b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("46a1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("a99a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("fa8e98e4b0f9 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 命名空间，填ID")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("重启 order-service 后，访问控制台，可以在 dev 的 namespace 下看到该服务实例。此时访问 order-service，因为 namespace 不同，会导致找不到处于其他命名空间的 user-service，控制台会报错：")]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210714000941256.png",alt:"image-20210714000941256"}}),s._v(" "),a("h3",{attrs:{id:"_5-5-nacos-与-eureka-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-nacos-与-eureka-的区别"}},[s._v("#")]),s._v(" 5.5 Nacos 与 Eureka 的区别")]),s._v(" "),a("p",[s._v("Nacos 的服务实例分为两种类型：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("临时实例：如果实例宕机超过一定时间，会从服务列表剔除，默认的类型。")])]),s._v(" "),a("li",[a("p",[s._v("非临时实例：如果实例宕机，不会从服务列表剔除，也可以叫永久实例。")])])]),s._v(" "),a("p",[s._v("配置一个服务实例为永久实例：")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cloud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nacos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("discovery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ephemeral")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置为非临时实例")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("Nacos 和 Eureka 整体结构类似，服务注册、服务拉取、心跳等待，但是也存在一些差异：")]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20210714001728017.png",alt:"image-20210714001728017"}}),s._v(" "),a("ul",[a("li",[a("p",[s._v("Nacos 与 Eureka 的共同点")]),s._v(" "),a("ul",[a("li",[s._v("都支持服务注册和服务拉取")]),s._v(" "),a("li",[s._v("都支持服务提供者心跳方式做健康检测")])])]),s._v(" "),a("li",[a("p",[s._v("Nacos 与 Eureka 的区别")]),s._v(" "),a("ul",[a("li",[s._v("Nacos 支持服务端主动检测提供者状态：临时实例采用心跳模式，非临时实例采用主动检测模式")]),s._v(" "),a("li",[s._v("临时实例心跳不正常会被剔除，非临时实例则不会被剔除，只是显示为不健康了")]),s._v(" "),a("li",[s._v("Nacos 支持服务列表变更的消息推送模式，服务列表更新更及时")]),s._v(" "),a("li",[s._v("Nacos 集群默认采用 AP 方式，当集群中存在非临时实例时，采用 CP 模式；Eureka 采用 AP 方式")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);