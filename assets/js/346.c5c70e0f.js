(window.webpackJsonp=window.webpackJsonp||[]).push([[346],{1118:function(a,s,e){"use strict";e.r(s);var t=e(22),n=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("blockquote",[e("p",[a._v("参考视频 "),e("a",{attrs:{href:"https://www.bilibili.com/video/BV1DY41177rK/",target:"_blank",rel:"noopener noreferrer"}},[a._v("@Autowired和@Resource注解的区别"),e("OutboundLink")],1)])]),a._v(" "),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[a._v("省流")]),a._v(" "),e("ul",[e("li",[a._v("@Autowired 默认 by type，也可以搭配 @Qualifier 来指定 by name；")]),a._v(" "),e("li",[a._v("@Resource 默认 by name，找不到则 by type，他也可以显式指定 name 或 type。")])])]),a._v(" "),e("h2",{attrs:{id:"_1-autowired-注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-autowired-注解"}},[a._v("#")]),a._v(" 1. Autowired 注解")]),a._v(" "),e("p",[a._v("@Autowired 为 Spring 提供的注解，采取的策略为按照类型注入：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserService")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Autowired")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserDao")]),a._v(" userDao"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("如上代码所示，这样装配回去 Spring 容器中找到类型为 "),e("code",[a._v("UserDao")]),a._v(" 的类，然后将其注入进来。")]),a._v(" "),e("p",[a._v("但这样会产生一个问题：当一个类型有多个 bean 的时候，会造成无法选择具体注入哪一个 bean，这时我们就需要配合着 "),e("strong",[a._v("@Qualifier")]),a._v(" 使用。")]),a._v(" "),e("p",[a._v("@Qualifier 搭配 name 来告诉 Spring 具体去装配哪个 bean：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserService")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Autowired")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Qualifier")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"userDao1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserDao")]),a._v(" userDao"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h2",{attrs:{id:"_2-resource-注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-resource-注解"}},[a._v("#")]),a._v(" 2. Resource 注解")]),a._v(" "),e("p",[a._v("@Resource 注解由 JavaEE 提供，它默认按照 name 自动注入：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserService")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Resource")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserDao")]),a._v(" userDao"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("如上的代码会注入一个 name 为 userDao 的 bean，如果匹配不到的话就回退为一个按照 type 来匹配，再匹配不到就抛出异常。")]),a._v(" "),e("p",[a._v("另外，@Resource 可以显式指定 type 或 name，即 "),e("code",[a._v('@Resource(name = "userDao")')]),a._v(" 或 "),e("code",[a._v('@Resource(type = "TeacherDao")')]),a._v("，当然也可以同时指定 type 和 name 来组合使用。当显式指定但又匹配不到时，会抛出异常。")]),a._v(" "),e("h2",{attrs:{id:"summary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[a._v("#")]),a._v(" Summary")]),a._v(" "),e("p",[a._v("Spring 属于第三方的，JavaEE 是 Java 自己的东西，使用 @Resource 可以减少代码和 Spring 之间的耦合。")]),a._v(" "),e("p",[a._v("两者都可以写在 field 和 setter method 上，如果写在 field 上就不需要再写 setter 了。")]),a._v(" "),e("p",[a._v("无法唯一匹配时会抛出异常。")])])}),[],!1,null,null,null);s.default=n.exports}}]);