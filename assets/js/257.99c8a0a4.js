(window.webpackJsonp=window.webpackJsonp||[]).push([[257],{1008:function(t,s,a){"use strict";a.r(s);var n=a(22),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-正则表达式"}},[t._v("#")]),t._v(" 1. 正则表达式")]),t._v(" "),a("p",[t._v("正则表达式用于字符串的检索、替换和匹配。可以在 "),a("a",{attrs:{href:"https://c.runoob.com/front-end/854/",target:"_blank",rel:"noopener noreferrer"}},[t._v("菜鸟正则表达式在线测试"),a("OutboundLink")],1),t._v(" 或 "),a("a",{attrs:{href:"https://tool.oschina.net/regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("oschina正则表达式测试工具"),a("OutboundLink")],1),t._v(" 进行尝试。")]),t._v(" "),a("p",[t._v("Python 的 re 库提供了整个正则表达式的实现，往往选择使用它。第三方模块 "),a("a",{attrs:{href:"https://pypi.org/project/regex/",target:"_blank",rel:"noopener noreferrer"}},[t._v("regex"),a("OutboundLink")],1),t._v(" , 提供了与标准库 re 模块兼容的 API 接口，同时，还提供了更多功能和更全面的 Unicode 支持。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-match"}},[t._v("#")]),t._v(" 1.1 match")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("re.match(pattern, string, flags=0)")])]),t._v(" "),a("p",[t._v("会尝试从字符串的"),a("strong",[t._v("起始位置开始匹配")]),t._v("正则表达式，如果匹配，就返回一个相应的匹配对象 。 如果没有匹配，就返回 "),a("code",[t._v("None")]),t._v(" ；注意它跟零长度匹配是不同的。")]),t._v(" "),a("p",[t._v("注意即便是 "),a("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/re.html#re.MULTILINE",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("MULTILINE")]),a("OutboundLink")],1),t._v(" 多行模式， re.match() 也只匹配字符串的开始位置，而不匹配每行开始。")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\ncontent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello 123 4567 World_This is a Regex Demo'")]),t._v("\npattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^Hello\\s\\d\\d\\d\\s\\d{4}\\s\\w{10}'")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("输出：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Hello 123 4567 World_This\n(0, 25)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[a("p",[a("code",[t._v("group")]),t._v(" 方法返回匹配的内容")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("span")]),t._v(" 方法返回匹配的范围")])])]),t._v(" "),a("h4",{attrs:{id:"匹配目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配目标"}},[t._v("#")]),t._v(" 匹配目标")]),t._v(" "),a("p",[t._v("如果是想从字符串中提取一部分内容，比如从一段文本中提取出 email 地址，该怎么办？可以使用 () 将向提取的子字符串括起来。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\ncontent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello 1234567 World_This is a Regex Demo'")]),t._v("\npattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^Hello\\s(\\d+)\\sWorld'")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("输出：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Hello 1234567 World\n1234567\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("可以看到 pattern 中数字部分的正则表达式被 () 括了起来，这样调用 "),a("code",[t._v("group(1)")]),t._v(" 获取了匹配结果：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("group()")]),t._v(" 返回完整的匹配结果")]),t._v(" "),a("li",[a("code",[t._v("group(1)")]),t._v(" 返回第一个被 () 包围的匹配结果")])]),t._v(" "),a("h4",{attrs:{id:"通用匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用匹配"}},[t._v("#")]),t._v(" 通用匹配")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("*")]),t._v(" 代表匹配前面的字符无限次")]),t._v(" "),a("li",[a("code",[t._v(".")]),t._v(" 代表可以匹配任意字符（除换行符）")])]),t._v(" "),a("h4",{attrs:{id:"贪婪与非贪婪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪与非贪婪"}},[t._v("#")]),t._v(" 贪婪与非贪婪")]),t._v(" "),a("p",[t._v("有时候通用匹配 "),a("code",[t._v(".*")]),t._v(" 匹配到的内容不是我们想要的，这涉及到贪婪模式和非贪婪模式：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("贪婪匹配")]),t._v("是匹配尽可能多的字符")]),t._v(" "),a("li",[a("strong",[t._v("非贪婪匹配")]),t._v("是匹配尽可能少的字符")])]),t._v(" "),a("p",[t._v("示例，假如我们仍然向获得目标字符串中间的数字，所以正则表达式中间仍然写 "),a("code",[t._v("(\\d+)")]),t._v("，两边较为杂乱，所以用 "),a("code",[t._v(".*")]),t._v(" 来匹配：")]),t._v(" "),a("div",{staticClass:"language-python {4, 5} line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\ncontent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello 1234567 World_This is a Regex Demo'")]),t._v("\npattern1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^He.*(\\d+).*Demo$'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 贪婪匹配")]),t._v("\npattern2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^He.*?(\\d+).*Demo$'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 非贪婪匹配")]),t._v("\n\nresult1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("输出：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("7\n1234567\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("在贪婪匹配下，"),a("code",[t._v(".*")]),t._v(" 会匹配尽可能多的字符，"),a("code",[t._v(".*")]),t._v(" 后面是 "),a("code",[t._v("\\d+")]),t._v("，也就是至少匹配一个数字，但没有规定几个数字，因此，"),a("code",[t._v(".*")]),t._v(" 会尽可能多的匹配，这里也就把 123456 都匹配了，只给 "),a("code",[t._v("\\d+")]),t._v(" 留下了一个可满足条件的数字 7")]),t._v(" "),a("li",[t._v("非贪婪匹配的写法是 "),a("code",[t._v(".*?")]),t._v("，也就是多了一个 "),a("code",[t._v("?")]),t._v(" ，这里当 "),a("code",[t._v(".*?")]),t._v(" 匹配到 Hello 后面的空白字符时，再往后就是数字了，可以交给 "),a("code",[t._v("(\\d+)")]),t._v(" 来匹配，于是 "),a("code",[t._v(".*?")]),t._v(" 就不再匹配了，最终结果是 "),a("code",[t._v("(\\d+)")]),t._v(" 匹配了 1234567")])]),t._v(" "),a("p",[t._v("所以说，"),a("strong",[t._v("在做匹配的时候、字符串中间尽量使用非贪梦匹配")]),t._v("，也就是用 "),a("code",[t._v(".*?")]),t._v("代替 "),a("code",[t._v(".*")]),t._v("，以免出现匹配结果缺失的情况。")]),t._v(" "),a("p",[t._v("但这里需要"),a("strong",[t._v("注意，如果匹配的结果在字符串结尾，"),a("code",[t._v(".*?")]),t._v(" 有可能匹配不到任何内容了，因为它会匹配尽可能少的字符")]),t._v("。例如：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\ncontent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://weibo.com/comment/kEraCN'")]),t._v("\nresult1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http.*?comment/(.*?)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http.*?comment/(.*)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'result1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'result2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("运行结果如下：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("result1\nresult2 kEraCN\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("可以观察到，"),a("code",[t._v(".*?")]),t._v("没有匹配到任何结果，而 "),a("code",[t._v(".*")]),t._v(" 则是尽量多匹配内容，成功得到了匹配结果。")]),t._v(" "),a("h4",{attrs:{id:"修饰符-标记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符-标记"}},[t._v("#")]),t._v(" 修饰符（标记）")]),t._v(" "),a("p",[t._v("正则表达式的标记用于指定额外的匹配策略。")]),t._v(" "),a("p",[t._v("标记不写在正则表达式里，标记位于表达式之外，格式如下：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/pattern/flags\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("下表列出了正则表达式常用的修饰符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("修饰符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("含义")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("i")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ignore - 不区分大小写")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("g")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("global - 全局匹配")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找所有的匹配项。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("m")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("multi line - 多行匹配")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("使边界字符 "),a("strong",[t._v("^")]),t._v(" 和 "),a("strong",[t._v("$")]),t._v(" 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("特殊字符圆点 "),a("strong",[t._v(".")]),t._v(" 中包含换行符 "),a("strong",[t._v("\\n")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("默认情况下的圆点 "),a("strong",[t._v(".")]),t._v(" 是 匹配除换行符 "),a("strong",[t._v("\\n")]),t._v(" 之外的任何字符，加上 "),a("strong",[t._v("s")]),t._v(" 修饰符之后, "),a("strong",[t._v(".")]),t._v(" 中包含换行符 \\n。")])])])]),t._v(" "),a("ul",[a("li",[t._v("在 "),a("code",[t._v("re")]),t._v(" 库中，是写在 match 方法的第三个参数里，比如 "),a("code",[t._v("re.match(p, s, re.S)")])]),t._v(" "),a("li",[t._v("较为常用的是 re.S 和 re.I")])]),t._v(" "),a("p",[t._v("Python 示例：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\ncontent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Hello 1234567 World_This\nis a Regex Demo\n"""')]),t._v("\npattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^He.*?(\\d+).*Demo$'")]),t._v("\n\nresult1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("运行后会报错，因为未匹配成功导致 match 返回一个 None，在 None 上调用 group 引发错误。这里 "),a("code",[t._v(".*")]),t._v(" 无法匹配换行符，我们再加一个修饰符 "),a("code",[t._v("re.S")]),t._v(" 便可以得到解决：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("S"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("u",[t._v("这个 re.S 在网页匹配中经常用到，因为 HTML 节点经常会有换行，加上他，就可以匹配节点与节点之间的换行了")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"转义匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义匹配"}},[t._v("#")]),t._v(" 转义匹配")]),t._v(" "),a("p",[t._v("当在目标字符串中遇到用作正则匹配模式的特殊字符时，在此字符前面加上反斜线 "),a("code",[t._v("\\")]),t._v(" 转义一下即可。比如 "),a("code",[t._v("\\.")]),t._v(" 可以匹配 "),a("code",[t._v(".")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-search-和-findall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-search-和-findall"}},[t._v("#")]),t._v(" 1.2 search 和 findall")]),t._v(" "),a("p",[t._v("match 是从字符串的开头开始匹配的，意味着一旦开头不匹配，整个匹配就失败了。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("search")]),t._v(" 会在匹配时扫描整个字符串，然后返回第一个匹配成功的结果，如果扫描完都没有找到，那返回 None")]),t._v(" "),a("li",[a("strong",[t._v("findall")]),t._v(" 获取与正则表达式相匹配的所有字符串，其返回结果是列表类型")])]),t._v(" "),a("p",[t._v("如果只想获取匹配的第一个字符串，可以用 search 方法，如果需要提取多个内容，可以用 findall 方法。")]),t._v(" "),a("h3",{attrs:{id:"_1-3-sub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-sub"}},[t._v("#")]),t._v(" 1.3 sub")]),t._v(" "),a("p",[t._v("除了使用正则表达式提取信息，有时候还需要借助它来"),a("strong",[t._v("修改文本")]),t._v("。例如，想要把一串文本中的所有数字都去掉，如果只用字符串的 replace 方法，未免太烦琐了，这时可以借助 sub 方法。实例如下：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\ncontent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'54aK54yr50iR54ix5L2g'")]),t._v("\ncontent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("运行结果如下：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("aKyroiRixLg\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这里往 sub 方法的第一个参数中传人 "),a("code",[t._v("\\d+")]),t._v(" 以匹配所有的数字，往第二个参数中传入把数字替换成的字符串（如果去掉该参数，可以赋值为空），第三个参数是原字符串。")]),t._v(" "),a("h3",{attrs:{id:"_1-4-compile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-compile"}},[t._v("#")]),t._v(" 1.4 compile")]),t._v(" "),a("p",[t._v("compile 方法可以将正则字符串编译成正则表达式对象，以便在后面的匹配中复用。另外，compile 还可以传入修饰符，例如 re.S 等修饰符，这样在 search、findall 等方法中就不用额外传递了。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\ncontent1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2019-12-15 12:00'")]),t._v("\ncontent2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-06-12 13:15'")]),t._v("\ncontent3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-09-01 14:20'")]),t._v("\n\npattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d{2}:\\d{2}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresult1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("输出：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("2019-12-15  2020-06-12  2021-09-01\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("blockquote",[a("p",[t._v("更多方法可以参见 "),a("a",{attrs:{href:"https://www.runoob.com/python3/python3-reg-expressions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python3 正则表达式 | 菜鸟教程 (runoob.com)"),a("OutboundLink")],1),t._v(" 或官方文档 "),a("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/re.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("re --- 正则表达式操作"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_2-httpx-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-httpx-的使用"}},[t._v("#")]),t._v(" 2. httpx 的使用")]),t._v(" "),a("p",[t._v("有些网站强制使用 HTTP/2.0 协议访问，而 urilib 和 requests 只支持 HTTP/1.1，这时可以采用 hyper 或 httpx，后者使用更方便，功能更强大。")]),t._v(" "),a("blockquote",[a("p",[t._v("官方文档见 "),a("a",{attrs:{href:"https://www.python-httpx.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTPX (python-httpx.org)"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),a("p",[a("code",[t._v("https://spa16.scrape.center/")]),t._v(" 就是一个强制使用 HTTP/2.0 访问的网站，用浏览器打开后查看 Network 可以看到传输全部是通过 h2 方式。")]),t._v(" "),a("p",[t._v("如果我们使用 requests 爬取，会产生错误：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220111155641392.png",alt:"image-20220111155641392"}})]),t._v(" "),a("h4",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("见官方文档")]),t._v(" "),a("h4",{attrs:{id:"基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[t._v("#")]),t._v(" 基本使用")]),t._v(" "),a("p",[t._v("用 httpx 来爬取刚刚的网站：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" httpx\n\nurl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://spa16.scrape.center/'")]),t._v("\nclient "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" httpx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresponse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ul",[a("li",[t._v("注意默认不会开启对 HTTP/2.0 的支持，需要手动声明。")])]),t._v(" "),a("p",[t._v("注意在客户端的 httpx 上启用对HTTP/2.0的支持并不意味着请求和响应都将通过 HTTP/2.0 传输，"),a("strong",[t._v("这得客户端和服务端都支持 HTTP/2.0 才行")]),t._v("。如果客户端连接到仅支持 HTTP/1.1 的服务器，那么它也需要改用HTTP/1.1。")]),t._v(" "),a("blockquote",[a("p",[t._v("其他用法见官网。")])]),t._v(" "),a("h2",{attrs:{id:"_3-xpath-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-xpath-的使用"}},[t._v("#")]),t._v(" 3. XPath 的使用")]),t._v(" "),a("p",[t._v("XPath，即 XML 路径语言，是一门在 XML 文档中查找信息的语言。XPath 可用来在 XML 文档中对元素和属性进行遍历。")]),t._v(" "),a("h3",{attrs:{id:"_3-1-xpath-常用规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-xpath-常用规则"}},[t._v("#")]),t._v(" 3.1 XPath 常用规则")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("表达式")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("nodename")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取此节点的所有子节点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从根节点选取。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("//")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("..")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的父节点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取属性。")])])])]),t._v(" "),a("ul",[a("li",[t._v("具体示例可见下面")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-实例引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-实例引入"}},[t._v("#")]),t._v(" 3.2 实例引入")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\ntext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('\'\'\'\n<div>\n    <ul>\n         <li class="item-0"><a href="link1.html">first item</a></li>\n         <li class="item-1"><a href="link2.html">second item</a></li>\n         <li class="item-inactive"><a href="link3.html">third item</a></li>\n         <li class="item-1"><a href="link4.html">fourth item</a></li>\n         <li class="item-0"><a href="link5.html">fifth item</a>\n     </ul>\n </div>\n\'\'\'')]),t._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tostring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时 result 是 bytes 类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("在 "),a("code",[t._v("etree.HTML(text)")]),t._v(" 中，这一步会"),a("strong",[t._v("自动修正 text 所表示的 HTML 文本")]),t._v("，转换成 str 后打印结果为：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<html><body>\n<div>\n    <ul>\n         <li class="item-0"><a href="link1.html">first item</a></li>\n         <li class="item-1"><a href="link2.html">second item</a></li>\n         <li class="item-inactive"><a href="link3.html">third item</a></li>\n         <li class="item-1"><a href="link4.html">fourth item</a></li>\n         <li class="item-0"><a href="link5.html">fifth item</a>\n     </li></ul>\n </div>\n</body></html>\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("ul",[a("li",[t._v("可见原先 "),a("code",[t._v("text")]),t._v(" 中未闭合的 "),a("code",[t._v("li")]),t._v(" 节点被补全了，并自动添加了 body、html 节点")])]),t._v(" "),a("p",[t._v("另外也可以直接读取文本文件进行解析："),a("code",[t._v("html = etree.parse('./text.html', etree.HTMLParser())")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_3-3-所有节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-所有节点"}},[t._v("#")]),t._v(" 3.3 所有节点")]),t._v(" "),a("p",[t._v("一般会用以 "),a("code",[t._v("//")]),t._v(" 开头的 XPath 规则来"),a("u",[t._v("选取所有符合要求的节点")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\nhtml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./test.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTMLParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("这里 "),a("code",[t._v("*")]),t._v(" 达标匹配所有节点，运行结果是一个 Element 元素的列表。")])]),t._v(" "),a("h3",{attrs:{id:"_3-4-子节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-子节点"}},[t._v("#")]),t._v(" 3.4 子节点")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/")]),t._v(" 获取"),a("u",[t._v("直接子节点")]),t._v("。比如 "),a("code",[t._v("//li/a")]),t._v(" 获取 li 节点的所有直接子节点 a。")]),t._v(" "),a("li",[a("code",[t._v("//")]),t._v(" 获取"),a("u",[t._v("子孙节点")]),t._v("。比如 "),a("code",[t._v("//ul//a")]),t._v(" 获取 ul 节点下的所有子孙节点 a。")])]),t._v(" "),a("h3",{attrs:{id:"_3-5-文本获取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-文本获取"}},[t._v("#")]),t._v(" 3.5 文本获取")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/text()")]),t._v(" 获取当前节点的内部文本，注意，如果 "),a("code",[t._v("<li>first<a>second</a></li>")]),t._v("，这样 "),a("code",[t._v("/li/text()")]),t._v(" 获取的是 first 而不包含 second")]),t._v(" "),a("li",[a("code",[t._v("//text()")]),t._v(" 获取所有子孙节点的文本，比如上面的 "),a("code",[t._v("/li//text()")]),t._v(" 则会获取到 first 和 second。")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-python {5, 7} line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\n\ntext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<li>first<a>second</a></li>'")]),t._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li/text()'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li//text()'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("['first']\n['first', 'second']\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-6-属性匹配和属性获取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-属性匹配和属性获取"}},[t._v("#")]),t._v(" 3.6 属性匹配和属性获取")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("属性匹配")]),t._v("—— "),a("code",[t._v("[@class=‘item-0’]")]),t._v(" 限制所选取的节点的 class 属性必须为 item-0")]),t._v(" "),a("li",[a("strong",[t._v("属性获取")]),t._v("—— "),a("code",[t._v("@href")]),t._v(" 表示获取节点的 href 属性")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[@class=\"item-0\"]'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 属性匹配")]),t._v("\nresult2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li/a/@href'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 属性获取")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"属性多值匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性多值匹配"}},[t._v("#")]),t._v(" 属性多值匹配")]),t._v(" "),a("p",[t._v("有时候，某些节点的某个属性可能有多个值：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\ntext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n<li class=\"li li-first\"><a href=\"link.html\">first item</a></li>\n'''")]),t._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[@class=\"li\"]/a/text()'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("这里 li 节点的 class 属性有两个值：li 和 li-first，此时如果还用之前的属性匹配获取节点，就无法进行了，这时需要用到 contains 方法，需要修改为：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\ntext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n<li class=\"li li-first\"><a href=\"link.html\">first item</a></li>\n'''")]),t._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[contains(@class, \"li\")]/a/text()'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("ul",[a("li",[a("strong",[t._v("contains")]),t._v(" 方法，第一个参数为属性名称，第二个是属性值，只要传入的属性"),a("strong",[t._v("包含")]),t._v("传入的属性值，就可以完成匹配。")])]),t._v(" "),a("h4",{attrs:{id:"多属性匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多属性匹配"}},[t._v("#")]),t._v(" 多属性匹配")]),t._v(" "),a("p",[t._v("还有一种情况是根据多个属性来确定一个节点，这时需要"),a("u",[t._v("同时匹配多个属性")]),t._v("。运算符 and 用于连接多个属性：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\ntext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n<li class=\"li li-first\" name=\"item\"><a href=\"link.html\">first item</a></li>\n'''")]),t._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'//li[contains(@class, "li") and @name="item"]/a/text()\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("除此之外，还有很多其他"),a("strong",[t._v("运算符")]),t._v("：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("返回值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("|")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("计算两个节点集")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("//book | //cd")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("返回所有拥有 book 和 cd 元素的节点集")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("+")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("加法")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6 + 4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("10")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("减法")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6 - 4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("*")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("乘法")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6 * 4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("24")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("div")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("除法")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 div 4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("等于")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("price=9.80")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 price 是 9.80，则返回 true。如果 price 是 9.90，则返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("!=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不等于")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("price!=9.80")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 price 是 9.90，则返回 true。如果 price 是 9.80，则返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("小于")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("price<9.80")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 price 是 9.00，则返回 true。如果 price 是 9.90，则返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("小于或等于")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("price<=9.80")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 price 是 9.00，则返回 true。如果 price 是 9.90，则返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(">")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("大于")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("price>9.80")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 price 是 9.90，则返回 true。如果 price 是 9.80，则返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(">=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("大于或等于")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("price>=9.80")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 price 是 9.90，则返回 true。如果 price 是 9.70，则返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("or")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("或")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("price=9.80 or price=9.70")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 price 是 9.80，则返回 true。如果 price 是 9.50，则返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("and")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("与")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("price>9.00 and price<9.90")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果 price 是 9.80，则返回 true。如果 price 是 8.50，则返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("mod")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("计算除法的余数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("5 mod 2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-7-按序选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-按序选择"}},[t._v("#")]),t._v(" 3.7 按序选择")]),t._v(" "),a("p",[t._v("选择节点时，可能匹配了多个节点，但我们只想要其中第一个或最后一个，怎么办？")]),t._v(" "),a("p",[a("strong",[t._v("可以使用向中括号传入索引的方法获取特定次序的节点")]),t._v("，但要注意，xpath 里面与写代码不同，"),a("u",[t._v("序号是以 1 开头")]),t._v("，而不是 0。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("//li[1]")]),t._v(" 表示选取第一个 li 节点；")]),t._v(" "),a("li",[a("code",[t._v("//li[last()]")]),t._v(" 表示选取最后一个 li 节点；")]),t._v(" "),a("li",[a("code",[t._v("//li[position()<3]")]),t._v(" 表示选取位置小于 3 的 li 节点，即序号 1 和 2 的节点；")]),t._v(" "),a("li",[a("code",[t._v("//li[last()-2]")]),t._v(" 表示选取了倒数第三个节点，因为 last() 代表最后一个，再减 2 就是倒数第三个了。")])]),t._v(" "),a("h3",{attrs:{id:"_3-8-节点轴选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-节点轴选择"}},[t._v("#")]),t._v(" 3.8 节点轴选择")]),t._v(" "),a("p",[a("strong",[t._v("轴")]),t._v("可定义相对于当前节点的"),a("u",[t._v("节点集")]),t._v("。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("轴名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ancestor")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的所有先辈（父、祖父等）。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ancestor-or-self")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的所有先辈（父、祖父等）以及当前节点本身。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("attribute")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的所有属性。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("child")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的所有子元素。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("descendant")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的所有后代元素（子、孙等）。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("descendant-or-self")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的所有后代元素（子、孙等）以及当前节点本身。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("following")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取文档中当前节点的结束标签之后的所有节点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("namespace")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的所有命名空间节点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("parent")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点的父节点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("preceding")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取文档中当前节点的开始标签之前的所有节点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("preceding-sibling")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点之前的所有同级节点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("self")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("选取当前节点。")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lxml "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" etree\n\ntext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('\'\'\'\n<html><body>\n<div>\n    <ul>\n         <li class="item-0"><a href="link1.html">first item</a></li>\n         <li class="item-1"><a href="link2.html">second item</a></li>\n         <li class="item-inactive"><a href="link3.html">third item</a></li>\n         <li class="item-1"><a href="link4.html">fourth item</a></li>\n         <li class="item-0"><a href="link5.html">fifth item</a>\n     </li></ul>\n </div>\n</body></html>\n\'\'\'')]),t._v("\nhtml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" etree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HTML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[1]/ancestor::*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取第一个 li 节点的所有祖先节点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 包括 html、body、div 和 ul")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[1]/ancestor::div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[1]/attribute::*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一个 li 节点的所有属性值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[1]/child::a[@href=\"link1.html\"]'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有直接子节点中的符合属性条件的 a 节点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[1]/descendant::span'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有子孙节点中的 span 节点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[1]/following::*[2]'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前节点之后的第二个节点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//li[1]/following-sibling::*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有的后续同级节点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br")])]),a("h2",{attrs:{id:"_4-pyquery-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-pyquery-的使用"}},[t._v("#")]),t._v(" 4. pyquery 的使用")]),t._v(" "),a("p",[t._v("占坑...")]),t._v(" "),a("h2",{attrs:{id:"_5-parsel-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-parsel-的使用"}},[t._v("#")]),t._v(" 5. parsel 的使用")]),t._v(" "),a("p",[t._v("parsel 这个库可以解析 HTML 和 XML，并"),a("strong",[t._v("同时支持使用 XPath 和 CSS 选择器")]),t._v("对内容进行提取和修改同时还融合了正则表达式的提取功能。parsel 灵活且强大，同时也是 Python 最流行的爬虫框架 Scrapy 的底层支持。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/498104904",target:"_blank",rel:"noopener noreferrer"}},[t._v("网页解析利器 parsel"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);