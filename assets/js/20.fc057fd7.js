(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{1060:function(t,s,a){"use strict";a.r(s);var n=a(22),c=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"_1-图的基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-图的基本概念"}},[t._v("#")]),t._v(" 1. 图的基本概念")]),t._v(" "),n("h2",{attrs:{id:"_2-图的存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-图的存储"}},[t._v("#")]),t._v(" 2. 图的存储")]),t._v(" "),n("h2",{attrs:{id:"_3-图的遍历"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-图的遍历"}},[t._v("#")]),t._v(" 3. 图的遍历")]),t._v(" "),n("p",[n("mark",[t._v("图的遍历")]),t._v("是指从图中的某一顶点出发，按照某种搜索方法沿着图中的边对图中的所有顶点访问一次"),n("strong",[t._v("且仅访问一次")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_3-1-广度优先搜索-bfs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-广度优先搜索-bfs"}},[t._v("#")]),t._v(" 3.1 广度优先搜索（BFS）")]),t._v(" "),n("h4",{attrs:{id:"_3-1-1-算法介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-算法介绍"}},[t._v("#")]),t._v(" 3.1.1 算法介绍")]),t._v(" "),n("p",[n("img",{attrs:{src:a(503),alt:"image-20211106181601107"}})]),t._v(" "),n("p",[t._v("BFS 的核心思想应该不难理解的，就是把一些问题抽象成图，从一个点开始，向四周开始扩散。一般来说，我们写 BFS 算法都是用「队列」这种数据结构，每次将一个节点周围的所有节点加入队列。")]),t._v(" "),n("p",[t._v("广度优先搜索的伪代码（用邻接矩阵来实现）：")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MAX_VEXTEX_NUM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BFSTraverse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Graph G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Queue Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vexNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vexNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BFS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BFS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Graph G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("visit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        v "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" v的所有邻居"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("visit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br")])]),n("ul",[n("li",[t._v("队列 "),n("code",[t._v("Q")]),t._v(" 存储当前已经访问但还没有访问其邻居的节点，其中记忆的顶点要被用来访问其下一层顶点。")]),t._v(" "),n("li",[n("code",[t._v("visited")]),t._v(" 的主要作用是防止走回头路，大部分时候都是必须的，但是像一般的二叉树结构，没有子节点到父节点的指针，不会走回头路就不需要 "),n("code",[t._v("visited")]),t._v("。这里 "),n("code",[t._v("visited")]),t._v(" 也可以用 "),n("code",[t._v("Set")]),t._v(" 来实现。")])]),t._v(" "),n("h4",{attrs:{id:"_3-1-2-bfs-性能分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-bfs-性能分析"}},[t._v("#")]),t._v(" 3.1.2 BFS 性能分析")]),t._v(" "),n("p",[t._v("空间复杂度：需要借助队列 Q，n 个顶点均需要入队一次，在最坏的情况下，空间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("时间复杂度：")]),t._v(" "),n("ul",[n("li",[t._v("邻接表存储：每个顶点均需要搜索一次（入队一次），复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，在搜索任一顶点的邻接点时，每条边至少访问一次，复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"E"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，故算法总的时间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"+"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"E"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("li",[t._v("邻接矩阵存储：查找每个顶点的邻接点所需的时间为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，故算法总的时间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-msup",[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1)]),t._v(" "),n("h4",{attrs:{id:"_3-1-3-bfs-求解单源最短路径问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-bfs-求解单源最短路径问题"}},[t._v("#")]),t._v(" 3.1.3 BFS 求解单源最短路径问题")]),t._v(" "),n("p",[t._v("广度优先搜索总是按照距离由近到远来遍历图中每个顶点，因此 BFS 可以用来求非带权图中某一顶点到其余顶点的最短距离。")]),t._v(" "),n("p",[t._v("BFS 求解单源最短路径问题的算法如下：")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BFSMinDistance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Graph G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Node start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Queue Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化 d 和 path")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vexNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ∞"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// d[i]表示从u到i的最短路径")]),t._v("\n        path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// path[i]记录i在这个最短路径上的直接前驱")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从 start 开始")]),t._v("\n    visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" step "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始逐层对图进行遍历")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sz "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" sz"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历当前这一层的所有节点")]),t._v("\n            Node cur "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Node x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" cur的所有邻居"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" step"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("offer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        step"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入下一层，step+1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br")])]),n("h4",{attrs:{id:"_3-1-4-广度优先生成树"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-广度优先生成树"}},[t._v("#")]),t._v(" 3.1.4 广度优先生成树")]),t._v(" "),n("p",[t._v("...")]),t._v(" "),n("h3",{attrs:{id:"_3-2-深度优先搜索-dfs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-深度优先搜索-dfs"}},[t._v("#")]),t._v(" 3.2 深度优先搜索（DFS）")]),t._v(" "),n("p",[t._v("DFS 类似于树的先序遍历，尽可能“深”地搜索一个图。")]),t._v(" "),n("h4",{attrs:{id:"递归实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#递归实现"}},[t._v("#")]),t._v(" 递归实现")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MAX_VERTEX_NUM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 对图 G 进行深度优先遍历\n**/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DFSTraverse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Graph G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vexNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vexNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DFS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 从顶点 v 出发，深度优先遍历 G\n**/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DFS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Graph G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("visit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" v的所有邻居"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("visited"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DFS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br")])]),n("ul",[n("li",[t._v("图的邻接矩阵表示是唯一的，但对于邻接表来说，若输入的次序不同，生成的邻接表也不同，因此，"),n("u",[t._v("对于同样一个图，基于邻接矩阵的遍历所得到的 DFS 序列和 BFS 序列是唯一的，基于邻接表的遍历所得到的 DFS 序列和 BFS 序列是不唯一的")]),t._v("。")])]),t._v(" "),n("h4",{attrs:{id:"性能分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#性能分析"}},[t._v("#")]),t._v(" 性能分析")]),t._v(" "),n("p",[t._v("空间复杂度：需要借助递归工作栈，故空间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("时间复杂度：")]),t._v(" "),n("ul",[n("li",[t._v("邻接表存储：查找所有顶点的邻接点所需的时间为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"E"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，访问顶点所需的时间为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，故算法总的时间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"+"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"E"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("li",[t._v("邻接矩阵存储：查找每个顶点的邻接点所需的时间为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，故算法总的时间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-msup",[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("最终的结论是与 BFS 一样的。")])]),t._v(" "),n("h3",{attrs:{id:"_3-3-图的遍历与图的连通性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-图的遍历与图的连通性"}},[t._v("#")]),t._v(" 3.3 图的遍历与图的连通性")]),t._v(" "),n("p",[t._v("图的遍历算法可以用来判断图的连通性。")]),t._v(" "),n("ul",[n("li",[t._v("对于无向图，调用 BFS/DFS 函数的次数等于连通分量；")]),t._v(" "),n("li",[t._v("对于有向图，连通的有向图又分为强连通和非强连通，非强连通分量的一次调用 BFS/DFS 无法访问到该连通分量的所有节点。")])]),t._v(" "),n("h2",{attrs:{id:"_4-图的应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-图的应用"}},[t._v("#")]),t._v(" 4. 图的应用")]),t._v(" "),n("h3",{attrs:{id:"_4-1-最小生成树-最小支撑树"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-最小生成树-最小支撑树"}},[t._v("#")]),t._v(" 4.1 最小生成树（最小支撑树）")]),t._v(" "),n("p",[t._v("连通图的"),n("strong",[t._v("生成树")]),t._v("是包含图中所有节点的一个极小连通子图（n 个节点，n-1 条边）。")]),t._v(" "),n("p",[t._v("所有生成树中边的权值之和最小的是树是"),n("strong",[t._v("最小生成树")]),t._v("。")]),t._v(" "),n("p",[t._v("最小生成树性质：")]),t._v(" "),n("ol",[n("li",[t._v("不唯一；")]),t._v(" "),n("li",[t._v("权值之和唯一；")]),t._v(" "),n("li",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"E"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"1"}})],1)],1)],1),t._v("；")],1),t._v(" "),n("li",[t._v("最小生成树总是会采用联接每一割的最短跨越边。")])]),t._v(" "),n("p",[t._v("用来得到最小生成树的算法有两个基于贪心策略的算法： Prim 算法和 Kruskal 算法，"),n("font",{attrs:{color:"blue"}},[t._v("普加点，克连边")]),t._v("。")],1),t._v(" "),n("h4",{attrs:{id:"prim-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prim-算法"}},[t._v("#")]),t._v(" Prim 算法")]),t._v(" "),n("p",[n("img",{attrs:{src:a(504),alt:"image-20211109123105313"}})]),t._v(" "),n("h4",{attrs:{id:"kruskal-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#kruskal-算法"}},[t._v("#")]),t._v(" Kruskal 算法")]),t._v(" "),n("p",[n("img",{attrs:{src:a(505),alt:"image-20211109123126686"}})]),t._v(" "),n("ul",[n("li",[t._v("Prim 算法的时间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-msup",[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，适合"),n("u",[t._v("边稠密")]),t._v("的图；")],1),t._v(" "),n("li",[t._v("Kruskal 算法的时间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"E"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"22C5"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-n",attrs:{space:"2"}},[n("mjx-c",{attrs:{c:"l"}}),n("mjx-c",{attrs:{c:"o"}}),n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2061"}})],1),n("mjx-TeXAtom",{attrs:{space:"2"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"E"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，适合"),n("u",[t._v("边稀疏而点较多")]),t._v("的图。")],1)]),t._v(" "),n("h3",{attrs:{id:"_4-2-最短路径算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-最短路径算法"}},[t._v("#")]),t._v(" 4.2 最短路径算法")]),t._v(" "),n("p",[n("img",{attrs:{src:a(506),alt:"image-20211109123833803"}})]),t._v(" "),n("h4",{attrs:{id:"dijkstra-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dijkstra-算法"}},[t._v("#")]),t._v(" Dijkstra 算法")]),t._v(" "),n("p",[t._v("口语化表述："),n("font",{attrs:{face:"楷体"}},[t._v("计算 u 到各顶点之间的最短距离，首先初始化 u 到自己的距离为 0，初始 dist[] 是图中本来的与 u 直观的距离（直接相连则为边的权值，不相连就是无穷）；然后从 dist[] 中选出距离最小的点加入结果集中，再计算其余的点到结果集的最短距离（通过比较原来到 u 的距离和经由新加入的点再到 u 的距离来判断是否更短了，如果更短的话就更新距离并记录该点的路径前驱是新加入的点），从中再选出距离最短的点加入结果集，之后重复上述过程直到所有点都加入了结果集")]),t._v("。")],1),t._v(" "),n("p",[n("img",{attrs:{src:a(507),alt:"image-20211109124829587"}})]),t._v(" "),n("ul",[n("li",[t._v("Dijkstra 也基于贪心策略；")]),t._v(" "),n("li",[t._v("Dijkstra 算法不适用带负权值的情况。")])]),t._v(" "),n("h4",{attrs:{id:"floyd-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#floyd-算法"}},[t._v("#")]),t._v(" Floyd 算法")]),t._v(" "),n("p",[t._v("基本思想：通过递推产生一系列的 n 阶距离方阵 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"A"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("、")])],1),n("mjx-msup",{attrs:{space:"4"}},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"A"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"0"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("、")])],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"22EF"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("、")])],1),n("mjx-msup",{attrs:{space:"4"}},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"A"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1)],1)],1),t._v("，其中 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"A"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"["}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"]"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"["}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"j"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"]"}})],1)],1)],1),t._v(" 表示从顶点 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1)],1)],1),t._v(" 与 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1)],1)],1),t._v(" 之间的最短路径和最短路径长度。")],1),t._v(" "),n("p",[t._v("口语化表述："),n("font",{attrs:{face:"楷体"}},[t._v("首先初始化 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"A"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1)],1)],1),t._v(" 为图中直观的两两顶点距离（相连则为边的权值，不相连则为无穷），然后开始递推：先加入 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"0"}})],1)],1)],1)],1)],1),t._v(" 作为中间节点，算一下两两节点之间若经由该中间节点是否更短，如果更短则更新，如果没有更短就不变，遍历完后得到 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"A"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"0"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1)],1)],1),t._v("。不断如此直到获得 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"A"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-TeXAtom",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1)],1)],1),t._v(" 作为结果。")],1)],1),t._v(" "),n("p",[t._v("Floyd 核心代码（三 for 算法）：")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 先做初始化工作")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 考虑以 v_k 作为中转点")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个 for 用 i、j 遍历整个矩阵")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若以v_k为中转点的距离更短")]),t._v("\n                A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录中转点")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("h3",{attrs:{id:"_4-3-拓扑排序-aov-网"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-拓扑排序-aov-网"}},[t._v("#")]),t._v(" 4.3 拓扑排序（AOV 网）")]),t._v(" "),n("p",[n("strong",[t._v("AOV 网")]),t._v("（Activity On Vertex），用顶点表示活动，有向边 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"<"}})],1),n("mjx-msub",{attrs:{space:"4"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:","}})],1),n("mjx-msub",{attrs:{space:"2"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:">"}})],1)],1)],1),t._v(" 表示活动 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1)],1)],1),t._v(" 必须先于 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[n("strong",[t._v("拓扑排序")]),t._v("：① 每个顶点只出现一次 ② 满足有向边定义的先后顺序。")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[t._v("拓扑排序就是找到做事的先后顺序。")])]),t._v(" "),n("p",[t._v("一个常用的拓扑排序算法：")]),t._v(" "),n("ol",[n("li",[t._v("从 AOV 网中选一个没有前驱（入度为0）的节点并输出；")]),t._v(" "),n("li",[t._v("从网中删除该节点和所有以它为起点的边；")]),t._v(" "),n("li",[t._v("重复上述过程直至 AOV 网为空或当前网中不存在无前驱的节点，后一种情况说明该有向图存在环。")])]),t._v(" "),n("p",[t._v("算法实现：")]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 拓扑排序\n **/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("topologicalSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Graph G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Stack S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保存入度为 0 的点，用队列也可")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vexNum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("indegree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将所有入度为 0 的顶点入栈")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录已输出的顶点个数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cur "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出该顶点")]),t._v("\n        count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 以cur为起点的边所指向的所有顶点"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将所有 x 的入度 -1，若减为 0 则入栈")]),t._v("\n            indegree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("indegree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//while")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vexNum"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指明是否排序成功，失败说明有环路")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br")])]),n("ul",[n("li",[n("code",[t._v("indegree")]),t._v("记录每个顶点的入度；")]),t._v(" "),n("li",[n("code",[t._v("stack")]),t._v("保存入度为 0 的顶点（也可以用队列实现）")])]),t._v(" "),n("p",[t._v("拓扑排序的注意点：")]),t._v(" "),n("ul",[n("li",[t._v("若存在一个顶点有多个直接后继，则拓扑排序结果通常不唯一；")]),t._v(" "),n("li",[t._v("邻接矩阵为三角阵的图，必存在拓扑序列。")]),t._v(" "),n("li",[n("strong",[t._v("复杂度")]),t._v("：由于输出每个顶点时还要删除以它为起点的边，因此时间复杂度为：\n"),n("ul",[n("li",[t._v("邻接表存储："),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"+"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"E"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),t._v(" "),n("li",[t._v("邻接矩阵存储："),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"V"}})],1),n("mjx-msup",[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"|"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1)])])]),t._v(" "),n("h3",{attrs:{id:"_4-4-关键路径-aoe-网"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-关键路径-aoe-网"}},[t._v("#")]),t._v(" 4.4 关键路径（AOE 网）")]),t._v(" "),n("p",[n("strong",[t._v("AOE 网")]),t._v("（Activity On Edge），用边表示活动，顶点表示事件，边上的权值表示完成该活动的开销。")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("AOV网 vs. AOE网")]),t._v(" "),n("p",[t._v("相同点：都是有向无环图；")]),t._v(" "),n("p",[t._v("不同点：AOE 网的边有权值；AOV 网的边无权值，仅表示顶点之间的先后次序。")])]),t._v(" "),n("p",[t._v("AOE 网的性质：")]),t._v(" "),n("ol",[n("li",[t._v("只有在某顶点事件发生后，以它为起点的活动才能开始；")]),t._v(" "),n("li",[t._v("只有当某顶点前面的"),n("strong",[t._v("所有")]),t._v("活动都结束后，该顶点事件才能发生；")]),t._v(" "),n("li",[t._v("活动可以并行进行。")])]),t._v(" "),n("p",[t._v("AOE 网中仅有一个入度为0的点，称为"),n("strong",[t._v("源点")]),t._v("（开始顶点）；仅有一个出度为0的点，称为"),n("strong",[t._v("汇点")]),t._v("（结束顶点）。")]),t._v(" "),n("p",[t._v("从源点到汇点中，具有最大路径长度的路径称为"),n("strong",[t._v("关键路径")]),t._v("，该路径上的活动称为"),n("strong",[t._v("关键活动")]),t._v("。")]),t._v(" "),n("p",[t._v("完成工程的最短时间就是关键路径的长度，若关键活动不能按时完成，则整个工程将会延期。因此，只要找到了关键活动，就找到了关键路径，也就能够得出最短完成时间。")]),t._v(" "),n("h4",{attrs:{id:"_4-4-1-寻找关键活动时用到的几个参量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-寻找关键活动时用到的几个参量"}},[t._v("#")]),t._v(" 4.4.1 寻找关键活动时用到的几个参量")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("事件 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1)],1)],1),t._v(" 的最早发生时间")],1),t._v(" "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("：从源点 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"1"}})],1)],1)],1)],1)],1),t._v(" 到顶点 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1)],1)],1),t._v(" 的最长路径长度。该参量决定了从 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1)],1)],1),t._v(" 开始的活动能够开工的最早时间。")],1)]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("ve 值的计算")]),t._v(" "),n("ul",[n("li",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("源")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("点")])],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"0"}})],1)],1)],1),t._v("；")],1),t._v(" "),n("li",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"m"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"a"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"x"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"{"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"j"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"+"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"w"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"<"}})],1),n("mjx-msub",{attrs:{space:"4"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:","}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:">"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"}"}})],1)],1)],1),t._v("，"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1)],1)],1),t._v("是"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1)],1)],1),t._v("的任意后继。")],1)]),t._v(" "),n("p",[n("strong",[t._v("从前往后的顺序计算")]),t._v("。程序实现时可以在拓扑排序的基础上计算：初始时所有节点的 ve = 0；每当输出一个入度为 0 的节点时，计算它所有直接后继节点的最早发生时间，若比之前更晚则更新（助记：前面还有别人，你得再等一会）。")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("strong",[t._v("事件 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1)],1)],1),t._v(" 的最迟发生时间")],1),t._v(" "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("：指在不推迟整个工程完成的前提下，"),n("strong",[t._v("即")]),t._v("保证它的后继事件 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1)],1)],1),t._v(" 在其最迟发生时间 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"j"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 能够发生时，该事件最迟必须发生的时间。")],1)]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("vl 值的计算")]),t._v(" "),n("ul",[n("li",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("汇")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("点")])],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("汇")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("点")])],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("；"),n("em",[t._v("// 该初始化保证了工程不延期")])],1),t._v(" "),n("li",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"m"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"{"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"j"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"w"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"<"}})],1),n("mjx-msub",{attrs:{space:"4"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:","}})],1),n("mjx-msub",{attrs:{space:"2"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:">"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"}"}})],1)],1)],1),t._v("，"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1)],1)],1),t._v("是"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1)],1)],1),t._v("的任意前驱。")],1)]),t._v(" "),n("p",[n("strong",[t._v("从后往前的顺序计算")]),t._v("。程序实现时可以在逆拓扑排序的基础上计算：初始时所有节点的 vl = ve(汇点)；每当输出一个出度为 0 的节点时，计算其所有直接前驱的最迟发生时间，若比之前提早了则更新（助记：ddl提前了，再晚干活就延期了）。")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[n("strong",[t._v("活动 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"a"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1)],1)],1),t._v(" 的最早开始时间")],1),t._v(" "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("：指边所表示的活动的最早发生时间。若边"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"<"}})],1),n("mjx-msub",{attrs:{space:"4"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:","}})],1),n("mjx-msub",{attrs:{space:"2"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:">"}})],1)],1)],1),t._v("表示活动"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"a"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1)],1)],1),t._v("，则有"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1)]),t._v(" "),n("li",[n("p",[n("strong",[t._v("活动 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"a"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1)],1)],1),t._v(" 的最迟开始时间")],1),t._v(" "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("：指边所表示的活动的最晚开始时间，它的值等于终点事件的最迟发生时间与活动所需时间之差。若边"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"<"}})],1),n("mjx-msub",{attrs:{space:"4"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:","}})],1),n("mjx-msub",{attrs:{space:"2"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:">"}})],1)],1)],1),t._v("表示活动"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"a"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1)],1)],1),t._v("，则有 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"j"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"w"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"<"}})],1),n("mjx-msub",{attrs:{space:"4"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"k"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:","}})],1),n("mjx-msub",{attrs:{space:"2"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"v"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"j"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:">"}})],1)],1)],1),t._v("。")],1)]),t._v(" "),n("li",[n("p",[n("strong",[t._v("活动"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"a"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1)],1)],1),t._v("的最迟发生时间 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 和最早开始时间 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 的差额【摸鱼时间】")],1),t._v(" "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"d"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"e"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"i"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("：指在不使工程延期的情况下，活动"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-msub",[n("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[n("mjx-c",{attrs:{c:"a"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"-0.15em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"i"}})],1)],1)],1)],1)],1),t._v("可以拖延（摸鱼）的时间。"),n("u",[t._v("若一个活动的时间余量为0，则说明该活动不得拖延，即为关键活动")]),t._v("。")],1)])]),t._v(" "),n("h4",{attrs:{id:"_4-4-2-求关键路径的算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-求关键路径的算法"}},[t._v("#")]),t._v(" 4.4.2 求关键路径的算法")]),t._v(" "),n("p",[t._v("算法步骤：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("求点最早开始时间 ve")]),t._v("：从前往后求 ve，其中 ve(源)  = 0；")]),t._v(" "),n("li",[n("strong",[t._v("求点最晚开始时间 vl")]),t._v("：从后往前求 vl，其中 vl(汇) = ve(汇)；")]),t._v(" "),n("li",[n("strong",[t._v("求弧最早开始时间 e")]),t._v("：e 等于弧起点的 ve；")]),t._v(" "),n("li",[n("strong",[t._v("求弧最晚开始时间 l")]),t._v("：l 等于弧终点的 vl 减去活动时间；")]),t._v(" "),n("li",[n("strong",[t._v("不能摸鱼的是关键活动")]),t._v("：l = e 的是关键活动。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(508),alt:"image-20211114202612646"}})]),t._v(" "),n("p",[t._v("注意点：")]),t._v(" "),n("ul",[n("li",[t._v("关键路径上的活动是关键活动，可以缩短其时间来缩短工期，但"),n("strong",[t._v("不能无限缩短")]),t._v("，到了一定的度，该活动就可能变成非关键活动了。")]),t._v(" "),n("li",[t._v("网的"),n("strong",[t._v("关键路径不唯一")]),t._v("。"),n("strong",[t._v("只有加快那些包括在所有关键路径上的关键活动才能缩短工期")]),t._v("。")])])])}),[],!1,null,null,null);s.default=c.exports},503:function(t,s,a){t.exports=a.p+"assets/img/image-20211106181601107.a1ea47cb.png"},504:function(t,s,a){t.exports=a.p+"assets/img/image-20211109123105313.fceddf44.png"},505:function(t,s,a){t.exports=a.p+"assets/img/image-20211109123126686.837910c5.png"},506:function(t,s,a){t.exports=a.p+"assets/img/image-20211109123833803.adeaf3c7.png"},507:function(t,s,a){t.exports=a.p+"assets/img/image-20211109124829587.508830bc.png"},508:function(t,s,a){t.exports=a.p+"assets/img/image-20211114202612646.1a9858cd.png"}}]);