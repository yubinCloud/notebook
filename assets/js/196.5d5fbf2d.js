(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{947:function(t,a,s){"use strict";s.r(a);var n=s(22),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-spring-与-spring-boot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-spring-与-spring-boot"}},[t._v("#")]),t._v(" 1. Spring 与 Spring Boot")]),t._v(" "),s("h3",{attrs:{id:"_1-1-spring-能做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-spring-能做什么"}},[t._v("#")]),t._v(" 1.1 Spring 能做什么？")]),t._v(" "),s("h4",{attrs:{id:"_1-1-1-spring-生态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-spring-生态"}},[t._v("#")]),t._v(" 1.1.1 Spring 生态")]),t._v(" "),s("p",[t._v("覆盖了：web开发、数据访问、安全控制、分布式、消息服务、移动开发和批处理。")]),t._v(" "),s("h4",{attrs:{id:"_1-1-2-spring-5-重大升级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-spring-5-重大升级"}},[t._v("#")]),t._v(" 1.1.2 Spring 5 重大升级")]),t._v(" "),s("ol",[s("li",[t._v("响应式编程")])]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220427201132985.png",alt:"image-20220427201132985"}}),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("内部源码设计")])]),t._v(" "),s("p",[t._v("基于 Java 8 的一些新特性，如：接口默认实现。重新设计源码架构。")]),t._v(" "),s("h3",{attrs:{id:"_1-2-为什么用-spring-boot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-为什么用-spring-boot"}},[t._v("#")]),t._v(" 1.2 为什么用 Spring Boot")]),t._v(" "),s("h4",{attrs:{id:"_1-2-1-优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-优点"}},[t._v("#")]),t._v(" 1.2.1 优点")]),t._v(" "),s("p",[t._v("创建独立 Spring 应用；内嵌 web 服务器；自动 starter 依赖，简化构建配置；自动配置 Spring 以及第三方功能；提供生产级别的监控、健康检查及外部化配置；无代码生成，无需编写 XML")]),t._v(" "),s("p",[t._v("Spring Boot 是整合 Spring 技术栈的一站式框架，是简化 Spring 技术栈的快速开发脚手架")]),t._v(" "),s("h4",{attrs:{id:"_1-2-2-缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-缺点"}},[t._v("#")]),t._v(" 1.2.2 缺点")]),t._v(" "),s("p",[t._v("迭代快、封装太深、内部原理复杂")]),t._v(" "),s("h3",{attrs:{id:"_1-3-时代背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-时代背景"}},[t._v("#")]),t._v(" 1.3 时代背景")]),t._v(" "),s("h4",{attrs:{id:"_1-3-1-微服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-微服务"}},[t._v("#")]),t._v(" 1.3.1 微服务")]),t._v(" "),s("p",[t._v("James Lewis and Martin Fowler (2014)  提出微服务完整概念：https://martinfowler.com/microservices/")]),t._v(" "),s("h4",{attrs:{id:"_1-3-2-分布式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-分布式"}},[t._v("#")]),t._v(" 1.3.2 分布式")]),t._v(" "),s("p",[t._v("分布式的困难：RPC、服务发现、负载均衡、服务容错、配置管理、服务监控、链路追踪、日志管理、任务调度 ….")]),t._v(" "),s("p",[t._v("解决方案：Spring Boot + Spring Cloud")]),t._v(" "),s("h4",{attrs:{id:"_1-3-3-云原生-cloud-native"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-云原生-cloud-native"}},[t._v("#")]),t._v(" 1.3.3 云原生（Cloud Native）")]),t._v(" "),s("p",[t._v("关键是原生应用如何上云的问题。")]),t._v(" "),s("p",[t._v("上云的困难：服务自愈、弹性伸缩、服务隔离、自动化部署、灰度发布、流量治理 …")]),t._v(" "),s("p",[t._v("上云的解决：")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220427202457667.png",alt:"image-20220427202457667"}}),t._v(" "),s("h3",{attrs:{id:"_1-4-如何学习-spring-boot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-如何学习-spring-boot"}},[t._v("#")]),t._v(" 1.4 如何学习 Spring Boot")]),t._v(" "),s("h4",{attrs:{id:"_1-4-1-官网文档架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-官网文档架构"}},[t._v("#")]),t._v(" 1.4.1 官网文档架构")]),t._v(" "),s("p",[t._v("Spring 官方文档：spring.io")]),t._v(" "),s("h2",{attrs:{id:"_2-spring-boot-2-入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-spring-boot-2-入门"}},[t._v("#")]),t._v(" 2. Spring Boot 2 入门")]),t._v(" "),s("p",[t._v("用 Spring Boot 运行 Hello World.")]),t._v(" "),s("h2",{attrs:{id:"_3-了解自动配置管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-了解自动配置管理"}},[t._v("#")]),t._v(" 3. 了解自动配置管理")]),t._v(" "),s("h3",{attrs:{id:"_3-1-依赖管理与自动配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-依赖管理与自动配置"}},[t._v("#")]),t._v(" 3.1 依赖管理与自动配置")]),t._v(" "),s("h4",{attrs:{id:"_3-1-1-依赖管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-依赖管理"}},[t._v("#")]),t._v(" 3.1.1 依赖管理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("父项目做依赖管理，声明了很多开发中常用的 jar 包的依赖，使得我们不再用写版本号。")])]),t._v(" "),s("li",[s("p",[t._v("开发导入 starter 场景启动器：要引入 starter，这个场景的所有常规需要的依赖都会自动引入")])]),t._v(" "),s("li",[s("p",[t._v("无需关注版本号，自动版本仲裁：")]),t._v(" "),s("ul",[s("li",[t._v("引入依赖默认都可以不写版本")]),t._v(" "),s("li",[t._v("引入非版本仲裁的 jar，要写版本号")])])]),t._v(" "),s("li",[s("p",[t._v("可以修改默认版本号：")]),t._v(" "),s("ol",[s("li",[t._v("查看 spring-boot-dependencies 里面规定当前依赖的版本")]),t._v(" "),s("li",[t._v("在当前项目里面重写配置：")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mysql.version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.1.43"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mysql.version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])]),t._v(" "),s("h4",{attrs:{id:"_3-1-2-自动配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-自动配置"}},[t._v("#")]),t._v(" 3.1.2 自动配置")]),t._v(" "),s("ul",[s("li",[t._v("自动配好 Tomcat")]),t._v(" "),s("li",[t._v("自动配好 Spring MVC 全套组件")]),t._v(" "),s("li",[t._v("自动配好 Web 常见功能")]),t._v(" "),s("li",[t._v("默认的包结构："),s("strong",[t._v("主程序所在包及其下面的所有子包里面的组件都会被默认扫描进来")]),t._v("，当然也可以通过注解来改变扫描路径。")]),t._v(" "),s("li",[t._v("各种配置拥有默认值")]),t._v(" "),s("li",[t._v("按需加载所有自动配置项：引入了哪些场景，这个场景的自动配置才会开启")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-容器功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-容器功能"}},[t._v("#")]),t._v(" 3.2 容器功能")]),t._v(" "),s("h4",{attrs:{id:"_3-2-1-组件添加"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-组件添加"}},[t._v("#")]),t._v(" 3.2.1 组件添加")]),t._v(" "),s("h5",{attrs:{id:"_1-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-configuration"}},[t._v("#")]),t._v(" 1）@Configuration")]),t._v(" "),s("ul",[s("li",[t._v("告诉 Spring Boot 这是一个配置类 == 以前的 xml 配置文件")]),t._v(" "),s("li",[t._v("配置类本身也是 component")]),t._v(" "),s("li",[s("code",[t._v("@Configuration(proxyBeanMethods = true)")]),t._v(" 的 proxyBeanMethods 为 true 时是 "),s("strong",[t._v("Full 模式")]),t._v("，保证每个 @Bean 方法被直接调用多少次返回的组件都是单实例；为 false 时是 "),s("strong",[t._v("Lite 模式")]),t._v("，每次被直接调用就是返回新实例。"),s("strong",[t._v("Best Practice")]),t._v("：配置组件之间无依赖关系时用 Lite 模式来加速容器启动过程，而有依赖关系时，用 Full 模式来使得方法被调用时都是得到的之前的单例。")])]),t._v(" "),s("blockquote",[s("p",[t._v("比如 @Bean 方法的 "),s("code",[t._v("getCat")]),t._v(" 返回了一个 Cat，而另一个 @Bean "),s("code",[t._v("getUser")]),t._v(" 返回了一个 User，而这个方法中直接调用了 "),s("code",[t._v("getCat")]),t._v(" 方法，这样就是组件之间有依赖关系，因此需要开启 Full 模式。")])]),t._v(" "),s("h5",{attrs:{id:"_2-bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-bean"}},[t._v("#")]),t._v(" 2）@Bean")]),t._v(" "),s("p",[t._v("给容器添加 component，以方法名作为组件的 id，返回类型就是组件的类型，返回的值就是组件在容器中的实例。"),s("strong",[t._v("默认是单实例的")]),t._v("。")]),t._v(" "),s("h5",{attrs:{id:"_3-component、-controller、-service、-repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-component、-controller、-service、-repository"}},[t._v("#")]),t._v(" 3）@Component、@Controller、@Service、@Repository")]),t._v(" "),s("h5",{attrs:{id:"_4-componentscan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-componentscan"}},[t._v("#")]),t._v(" 4）@ComponentScan")]),t._v(" "),s("h5",{attrs:{id:"_5-import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-import"}},[t._v("#")]),t._v(" 5）@Import")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DBHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[s("code",[t._v("@Import")]),t._v(" 给容器中通过无参构造器自动创建出这两个类型的组件，默认组件的名字就是"),s("strong",[t._v("全类名")]),t._v("（com.example.xxx.User）。")])]),t._v(" "),s("h5",{attrs:{id:"_6-conditional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-conditional"}},[t._v("#")]),t._v(" 6）@Conditional")]),t._v(" "),s("p",[t._v("条件装配：满足 Conditional 指定的条件，则进行组件注入。这个注解还派生了很多其他类型的注解，分别代表了在满足 xxx 情况下进行注入。")]),t._v(" "),s("h4",{attrs:{id:"_3-2-2-原生配置文件引入-importresource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-原生配置文件引入-importresource"}},[t._v("#")]),t._v(" 3.2.2 原生配置文件引入：@ImportResource")]),t._v(" "),s("p",[t._v("当仍然有些情况需要用 xml 来配置时（比如老项目的迁移），直接在 Spring Boot 中写 beans.xml 是配置不进去的，这个时候需要用 "),s("strong",[t._v("@ImportResource")]),t._v(" 来将 xml 配置文件加载进去。")]),t._v(" "),s("h4",{attrs:{id:"_3-2-3-配置绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-配置绑定"}},[t._v("#")]),t._v(" 3.2.3 配置绑定")]),t._v(" "),s("p",[t._v("如何使用 Java 读取到 properties 文件中的内容，并且把它封装到 JavaBean 中，以供随时使用？")]),t._v(" "),s("h5",{attrs:{id:"_1-configurationproperties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-configurationproperties"}},[t._v("#")]),t._v(" 1）@ConfigurationProperties")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 只有在容器中的组件，才会拥有SpringBoot提供的强大功能\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConfigurationProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mycar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" brand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("这会读取 properties 配置文件并将 "),s("code",[t._v("myCar.brand")]),t._v(" 和 "),s("code",[t._v("myCar.price")]),t._v(" 用于创建此 component。")]),t._v(" "),s("p",[t._v("这个属性在 Spring Boot 也是经常使用。")]),t._v(" "),s("h5",{attrs:{id:"_2-enableconfigurationproperties-configurationproperties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-enableconfigurationproperties-configurationproperties"}},[t._v("#")]),t._v(" 2）@EnableConfigurationProperties + @ConfigurationProperties")]),t._v(" "),s("p",[s("code",[t._v("@ConfigurationProperties")]),t._v(" 是说将配置绑定到一个类上，但并没有说注入 IOC 容器中，上面的例子是通过 "),s("code",[t._v("@Component")]),t._v(" 实现的注入容器中，但如果这是个第三方的类而它没有用 @Component 呢？那就要用 @EnableConfigurationProperties 了：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConfigurationProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mycar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" brand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableConfigurationProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Car")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、开启Car配置绑定功能")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、把这个Car这个组件自动注册到容器中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h3",{attrs:{id:"_3-3-自动配置原理入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-自动配置原理入门"}},[t._v("#")]),t._v(" 3.3 自动配置原理入门")]),t._v(" "),s("h4",{attrs:{id:"_3-3-1-引导加载配置类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-引导加载配置类"}},[t._v("#")]),t._v(" 3.3.1 引导加载配置类")]),t._v(" "),s("p",[t._v("@SpringBootApplication 是由下面三个注解组成的：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootConfiguration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableAutoConfiguration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ComponentScan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("excludeFilters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FilterType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CUSTOM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeExcludeFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FilterType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CUSTOM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" classes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoConfigurationExcludeFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h5",{attrs:{id:"_1-springbootconfiguration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-springbootconfiguration"}},[t._v("#")]),t._v(" 1）@SpringBootConfiguration")]),t._v(" "),s("p",[t._v("它就是一个 @Configuration，代表我们这个 Main 程序也是 Spring Boot 的一个配置类。")]),t._v(" "),s("h5",{attrs:{id:"_2-componentscan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-componentscan"}},[t._v("#")]),t._v(" 2）@ComponentScan")]),t._v(" "),s("p",[t._v("指定扫描哪些包，可参照 Spring 注解来学习其用法，在这里不再展开。")]),t._v(" "),s("h5",{attrs:{id:"_3-enableautoconfiguration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-enableautoconfiguration"}},[t._v("#")]),t._v(" 3）@EnableAutoConfiguration ⭐️")]),t._v(" "),s("p",[t._v("最重要的一个注解。除去元注解外，主要由 @AutoConfigurationPackage 和 @Import(AutoConfigurationImportSelector.class) 组成：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigurationPackage")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoConfigurationImportSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnableAutoConfiguration")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("我们分别看一下。")]),t._v(" "),s("h5",{attrs:{id:"_4-autoconfigurationpackage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-autoconfigurationpackage"}},[t._v("#")]),t._v(" 4）@AutoConfigurationPackage")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoConfigurationPackages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Registrar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoConfigurationPackage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("@Import 用于给容器中导入一个组件，导入了一个 Register，它可以将一个指定的包下的所有组件批量导入容器中。导入了哪些组件？是 Main 程序所在的包下的所有组件。")])]),t._v(" "),s("h5",{attrs:{id:"_5-import-autoconfigurationimportselector-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-import-autoconfigurationimportselector-class"}},[t._v("#")]),t._v(" 5）@Import(AutoConfigurationImportSelector.class)")]),t._v(" "),s("ol",[s("li",[t._v("利用 "),s("code",[t._v("getAutoConfigurationEntry(annotationMetadata);")]),t._v(" 给容器中批量导入一些组件")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("List<String> configurations = getCandidateConfigurations(annotationMetadata, attributes)")]),t._v(" 获取到所有需要导入到容器中的配置类")]),t._v(" "),s("li",[t._v("利用工厂加载 "),s("code",[t._v("Map<String, List<String>> loadSpringFactories(@Nullable ClassLoader classLoader);")]),t._v(" 得到所有的组件")]),t._v(" "),s("li",[t._v("从 META-INF/spring.factories 位置来加载一个文件。默认扫描我们当前系统里面所有 META-INF/spring.factories 位置的文件")])]),t._v(" "),s("h4",{attrs:{id:"_3-3-2-按需开启自动配置项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-按需开启自动配置项"}},[t._v("#")]),t._v(" 3.3.2 按需开启自动配置项")]),t._v(" "),s("p",[t._v("虽然上百个场景的所有自动配置启动的时候默认全部加载，xxxAutoConfigration 按照条件装配规则（@Conditional），最终会按需配置。")]),t._v(" "),s("h4",{attrs:{id:"_3-3-3-修改默认配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-修改默认配置"}},[t._v("#")]),t._v(" 3.3.3 修改默认配置")]),t._v(" "),s("p",[t._v("// TODO 这部分太难了")]),t._v(" "),s("h4",{attrs:{id:"_3-3-4-best-practice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-best-practice"}},[t._v("#")]),t._v(" 3.3.4 Best Practice")]),t._v(" "),s("ul",[s("li",[t._v("开发某个东西，先看看有没有它的场景依赖，并引入场景依赖，比如各种 starter")]),t._v(" "),s("li",[t._v("查看自动配置了哪些（选做）\n"),s("ul",[s("li",[t._v("自己分析，引入场景对应的自动配置一般都生效了")]),t._v(" "),s("li",[t._v("properties 配置文件中 "),s("code",[t._v("debug=true")]),t._v(" 开启自动配置报告")])])]),t._v(" "),s("li",[t._v("是否需要修改\n"),s("ul",[s("li",[t._v("参照"),s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),s("OutboundLink")],1),t._v("修改配置项")]),t._v(" "),s("li",[t._v("自定义加入或者替换组件：@Bean 或 @Component 等")]),t._v(" "),s("li",[t._v("自定义器：XXXCustomizer")])])])]),t._v(" "),s("h2",{attrs:{id:"_4-开发小技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-开发小技巧"}},[t._v("#")]),t._v(" 4. 开发小技巧")]),t._v(" "),s("h3",{attrs:{id:"_4-1-lombok"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-lombok"}},[t._v("#")]),t._v(" 4.1 Lombok")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.projectlombok"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("lombok"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("IDEA 中安装 lombok 插件")]),t._v(" "),s("h3",{attrs:{id:"_4-2-dev-tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-dev-tools"}},[t._v("#")]),t._v(" 4.2 dev-tools")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-devtools"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("optional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("optional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("项目或者页面修改以后："),s("code",[t._v("Ctrl+F9")])]),t._v(" "),s("h3",{attrs:{id:"_4-3-spring-initailizr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-spring-initailizr"}},[t._v("#")]),t._v(" 4.3 Spring Initailizr")]),t._v(" "),s("p",[t._v("自动创建项目")])])}),[],!1,null,null,null);a.default=r.exports}}]);