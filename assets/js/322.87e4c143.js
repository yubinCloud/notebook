(window.webpackJsonp=window.webpackJsonp||[]).push([[322],{1092:function(s,t,a){"use strict";a.r(t);var n=a(22),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("本章主要讲解为 socket 分配 IP 地址和端口号。")]),s._v(" "),a("h2",{attrs:{id:"_3-1-分配给套接字的-ip-地址与端口号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-分配给套接字的-ip-地址与端口号"}},[s._v("#")]),s._v(" 3.1 分配给套接字的 IP 地址与端口号")]),s._v(" "),a("h3",{attrs:{id:"_3-1-1-ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-ip"}},[s._v("#")]),s._v(" 3.1.1 IP")]),s._v(" "),a("p",[s._v("网络地址（"),a("strong",[s._v("I")]),s._v("nternet "),a("strong",[s._v("A")]),s._v("ddress）分为 IPv4 和 IPv6。")]),s._v(" "),a("p",[s._v("将数据包发给一个网络主机时，需要先传给这个主机所在子网的路由器或交换机。")]),s._v(" "),a("h3",{attrs:{id:"_3-1-2-端口号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-端口号"}},[s._v("#")]),s._v(" 3.1.2 端口号")]),s._v(" "),a("p",[s._v("端口号用于区分将数据传输给哪个具体的应用程序。")]),s._v(" "),a("p",[s._v("计算机一般有 "),a("strong",[s._v("NIC")]),s._v("（网络接口卡）数据传输设备，通过 NIC 接收的数据内有端口号，操作系统参考端口号把信息传给相应的应用程序。")]),s._v(" "),a("blockquote",[a("p",[s._v("虽然端口号不能重复，"),a("strong",[s._v("但是 TCP 套接字和 UDP 套接字不会共用端接口号，所以允许重复")]),s._v("。如果某 TCP 套接字使用了 9190 端口号，其他 TCP 套接字就无法使用该端口号，但是 UDP 套接字可以使用。")])]),s._v(" "),a("p",[s._v("总之，数据传输目标地址"),a("strong",[s._v("同时包含IP地址和端口号")]),s._v("，只有这样，数据才会被传输到最终的目的应用程序。")]),s._v(" "),a("h2",{attrs:{id:"_3-2-地址信息的表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-地址信息的表示"}},[s._v("#")]),s._v(" 3.2 地址信息的表示")]),s._v(" "),a("h3",{attrs:{id:"_3-2-1-表示-ipv4-地址的结构体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-表示-ipv4-地址的结构体"}},[s._v("#")]),s._v(" 3.2.1 表示 IPv4 地址的结构体")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("struct sockaddr_in")]),s._v(" 来表示 IPv4 的结构体：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr_in")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sa_family_t")]),s._v(" sin_family"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//地址族（Address Family）")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" sin_port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//16 位 TCP/UDP 端口号")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("in_addr")]),s._v(" sin_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//32位 IP 地址")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" sin_zero"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("其中的 "),a("code",[s._v("struct in_addr")]),s._v(" 用来存放 32 位 IP 地址：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("in_addr")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("in_addr_t")]),s._v(" s_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//32位IPV4地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("下面逐个分析一下 "),a("code",[s._v("struct sockaddr_in")]),s._v(" 的各个成员。")]),s._v(" "),a("h4",{attrs:{id:"_1-sin-family"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-sin-family"}},[s._v("#")]),s._v(" 1）sin_family")]),s._v(" "),a("p",[a("strong",[s._v("每种协议族适用的地址族均不同")]),s._v("。比如，IPV4 使用 4 字节的地址族，IPV6 使用 16 字节的地址族。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("地址族（Address Family）")]),s._v(" "),a("th",[s._v("含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("AF_INET")]),s._v(" "),a("td",[s._v("IPV4用的地址族")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("AF_INET6")]),s._v(" "),a("td",[s._v("IPV6用的地址族")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("AF_LOCAL")]),s._v(" "),a("td",[s._v("本地通信中采用的 Unix 协议的地址族")])])])]),s._v(" "),a("h4",{attrs:{id:"_2-sin-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-sin-port"}},[s._v("#")]),s._v(" 2）sin_port")]),s._v(" "),a("p",[s._v("16 位端口号，以网络字节序保存。")]),s._v(" "),a("h4",{attrs:{id:"_3-sin-addr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-sin-addr"}},[s._v("#")]),s._v(" 3）sin_addr")]),s._v(" "),a("p",[s._v("32 位 IP 地址信息，以网络字节序保存")]),s._v(" "),a("h4",{attrs:{id:"_4-sin-zero"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-sin-zero"}},[s._v("#")]),s._v(" 4）sin_zero")]),s._v(" "),a("p",[s._v("无特殊含义，必须填充为 0")]),s._v(" "),a("h3",{attrs:{id:"_3-2-2-sockaddr-in-结构体的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-sockaddr-in-结构体的使用"}},[s._v("#")]),s._v(" 3.2.2 sockaddr_in 结构体的使用")]),s._v(" "),a("p",[s._v("我们需要使用 bind 函数来将 socket 与地址信息进行绑定，但 bind 函数其实想要接收的地址信息类型是 "),a("code",[s._v("struct sockaddr *")]),s._v(" ：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sa_family_t")]),s._v("   sa_family"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 地址族信息")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v("          sa_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 地址信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这个 struct 在 "),a("code",[s._v("char[14]")]),s._v(" 中保存端口号、IP 等信息，对于程序来说不太好填充，所以我们使用更方便的 "),a("code",[s._v("struct sockaddr_in")]),s._v(" 来填充，然后将其转化为 "),a("code",[s._v("struct sockaddr *")]),s._v(" 传给 bind。")]),s._v(" "),a("p",[s._v("所以一般使用方法是：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr_in")]),s._v(" serv_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" is_bind "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_sock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serv_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serv_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("即：先声明一个 sockaddr_in 的实例，然后将其指针转为 "),a("code",[s._v("(struct sockaddr *)")])]),s._v(" "),a("h2",{attrs:{id:"_3-3-网络字节序与地址变换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-网络字节序与地址变换"}},[s._v("#")]),s._v(" 3.3 网络字节序与地址变换")])])}),[],!1,null,null,null);t.default=r.exports}}]);