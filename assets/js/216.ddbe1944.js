(window.webpackJsonp=window.webpackJsonp||[]).push([[216],{968:function(s,t,a){"use strict";a.r(t);var n=a(22),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("本章目标：")]),s._v(" "),a("ul",[a("li",[s._v("掌握mybatis在web应用中怎么用")]),s._v(" "),a("li",[s._v("mybatis三大对象的作用域和生命周期")]),s._v(" "),a("li",[s._v("ThreadLocal原理及使用")]),s._v(" "),a("li",[s._v("巩固MVC架构模式")]),s._v(" "),a("li",[s._v("为学习MyBatis的接口代理机制做准备")])]),s._v(" "),a("p",[s._v("主要实现一个银行账户转账的功能。数据库表的设计如下：")]),s._v(" "),a("center",[a("img",{staticStyle:{zoom:"75%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20230809213847.png",alt:"20230809213847"}})]),s._v(" "),a("h2",{attrs:{id:"_1-基本功能实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本功能实现"}},[s._v("#")]),s._v(" 1. 基本功能实现")]),s._v(" "),a("p",[s._v("较简单，这里不再展开。")]),s._v(" "),a("h2",{attrs:{id:"_2-事务问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-事务问题"}},[s._v("#")]),s._v(" 2. 事务问题")]),s._v(" "),a("p",[s._v("在银行转账等业务中，"),a("strong",[s._v("事务不应该放在 DAO 层中，而是应该放在 Service 层中")]),s._v("。")]),s._v(" "),a("p",[s._v("具体做法是在一个线程中，生成一个 SqlSession 并放到 ThreadLocal 中，然后 DAO 层都是从 ThreadLocal 取 SqlSession 并使用，防止多个 DAO 操作创建了多个 SqlSession 而不在一个事务管理中。")]),s._v(" "),a("blockquote",[a("p",[s._v("由于 Tomcat 会使用线程池等技术，所以在本次请求处理完之后别忘了把 SqlSession 从 ThreadLocal 中移除。")])]),s._v(" "),a("h2",{attrs:{id:"_3-mybatis-核心对象的作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-mybatis-核心对象的作用域"}},[s._v("#")]),s._v(" 3. MyBatis 核心对象的作用域")]),s._v(" "),a("p",[s._v("这部分内容可以在官方文档中找到。")]),s._v(" "),a("h3",{attrs:{id:"_3-1-sqlsessionfactorybuilder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-sqlsessionfactorybuilder"}},[s._v("#")]),s._v(" 3.1 SqlSessionFactoryBuilder")]),s._v(" "),a("p",[s._v("这个类可以被实例化、使用和丢弃，"),a("strong",[s._v("一旦创建了 SqlSessionFactory，就不再需要它了")]),s._v("。 因此 SqlSessionFactoryBuilder 实例的"),a("strong",[s._v("最佳作用域是方法作用域")]),s._v("（也就是局部方法变量）。 你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，但最好还是不要一直保留着它，以保证所有的 XML 解析资源可以被释放给更重要的事情。")]),s._v(" "),a("h3",{attrs:{id:"_3-2-sqlsessionfactory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-sqlsessionfactory"}},[s._v("#")]),s._v(" 3.2 SqlSessionFactory")]),s._v(" "),a("p",[a("strong",[s._v("SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在")]),s._v("，没有任何理由丢弃它或重新创建另一个实例。 使用 SqlSessionFactory 的最佳实践是在应用运行期间不要重复创建多次，多次重建 SqlSessionFactory 被视为一种代码“坏习惯”。因此 SqlSessionFactory 的"),a("strong",[s._v("最佳作用域是应用作用域")]),s._v("。 有很多方法可以做到，最简单的就是使用单例模式或者静态单例模式。")]),s._v(" "),a("h3",{attrs:{id:"_3-3-sqlsession"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-sqlsession"}},[s._v("#")]),s._v(" 3.3 SqlSession")]),s._v(" "),a("p",[s._v("每个线程都应该有它自己的 SqlSession 实例。SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。 绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，考虑将 SqlSession 放在一个和 HTTP 请求相似的作用域中。 换句话说，每次收到 HTTP 请求，就可以打开一个 SqlSession，返回一个响应后，就关闭它。 这个关闭操作很重要，为了确保每次都能执行关闭操作，你应该把这个关闭操作放到 finally 块中。 下面的示例就是一个确保 SqlSession 关闭的标准模式：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SqlSession")]),s._v(" session "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sqlSessionFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("openSession")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 你的应用逻辑代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"_4-mybatis-的接口代理机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-mybatis-的接口代理机制"}},[s._v("#")]),s._v(" 4. MyBatis 的接口代理机制")]),s._v(" "),a("p",[s._v("我们看一下银行转账代码中 DAO 层的代码。")]),s._v(" "),a("p",[s._v("Dao 类是一些接口，DaoImpl 是对 Dao 接口的实现：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("powernode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bank"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("impl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("powernode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bank"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccountDao")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("powernode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bank"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pojo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("powernode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bank"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("utils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SqlSessionUtil")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ibatis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("session"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SqlSession")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccountDaoImpl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccountDao")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("selectByActno")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" actno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SqlSession")]),s._v(" sqlSession "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SqlSessionUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("openSession")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" act "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("sqlSession"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("selectOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"account.selectByActno"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" actno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" act"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" act"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SqlSession")]),s._v(" sqlSession "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SqlSessionUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("openSession")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sqlSession"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"account.update"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" act"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("可以看到，这个dao实现类中的方法代码很固定，基本上就是一行代码，通过 SqlSession 对象调用书写在 mapper.xml 中的 insert、delete、update、select 等方法，这个类中的方法"),a("strong",[s._v("没有任何业务逻辑")]),s._v("，"),a("strong",[s._v("那我们能不能动态地生成 Dao 的实现类呢")]),s._v("？答案是可以。")]),s._v(" "),a("p",[s._v("自己做的话，可以用 javassist 库或 cglib 库来实现类的动态生成。但好消息是，MyBatis 已经帮我们实现了 Dao 类的动态生成，这也就是他的 "),a("mark",[s._v("接口代理机制")]),s._v("。")]),s._v(" "),a("p",[s._v("比如下面是使用 MyBatis 获取 Dao 接口代理类对象的方法：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccountDao")]),s._v(" accountDao "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccountDao")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("sqlSession"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMapper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccountDao")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这里 "),a("code",[s._v("accountDao")]),s._v(" 便是 AccountDao 接口的一个动态生成的实现类，它的实现忠实地使用 SqlSession 来调用 mapper.xml 中的 SQL 语句。")]),s._v(" "),a("p",[s._v("使用以上代码的前提是："),a("strong",[s._v("AccountMapper.xml 文件中的 namespace 必须和 dao 接口的全限定名称一致，id必须和dao接口中方法名一致")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("在 Spring Boot 中使用 MyBatis Starter 来开发基于 MyBatis 的程序时，往往 DAO 层或者 Mapper 层就是只是声明了一个 interface，这个 interface 与 mapper.xml 进行了关联，但我们并没有实现这个 interface，其实这就是 MyBatis 帮我们动态生成了这个类")]),s._v("。我们往往编写的 Mapper 接口就会是 MyBatis 为其生成实现类的字节码，同时帮我们 new 了出来，这样我们只需要 "),a("code",[s._v("@Autowired")]),s._v(" 就可以用了。")])],1)}),[],!1,null,null,null);t.default=e.exports}}]);