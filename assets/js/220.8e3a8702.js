(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{972:function(t,s,a){"use strict";a.r(s);var n=a(22),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("FROM "),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1ov41187bq",target:"_blank",rel:"noopener noreferrer"}},[t._v("黑马程序员Nginx教程，Java进阶从0到1学会Nginx分布式框架_哔哩哔哩_bilibili"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_1-nginx-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx-简介"}},[t._v("#")]),t._v(" 1. Nginx 简介")]),t._v(" "),a("h3",{attrs:{id:"_1-1-背景介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-背景介绍"}},[t._v("#")]),t._v(" 1.1 背景介绍")]),t._v(" "),a("p",[t._v("Nginx（“engine x”）一个具有高性能的 HTTP 和反向代理的 Web 服务器，由伊戈尔·赛索耶夫用 C 语言编写，开源。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-什么是反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-什么是反向代理"}},[t._v("#")]),t._v(" 1.2 什么是反向代理？")]),t._v(" "),a("p",[t._v("没有使用代理前，客户端将请求发给服务端，服务端再将响应返回给客户端。")]),t._v(" "),a("p",[t._v("但有一种情况是服务端可能禁掉某一类客户端的访问，这时客户端就可以用一个代理来实现访问服务端【正向代理】：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/1573489359728.png",alt:"1573489359728"}}),t._v(" "),a("p",[t._v("反向代理则是，客户端将请求发给 proxy，然后 proxy 将其转发给某一个服务端：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/1573489653799.png",alt:"1573489653799"}}),t._v(" "),a("blockquote",[a("p",[t._v("正向代理主要服务的是 client，而反向代理则主要服务的是 server。")])]),t._v(" "),a("h3",{attrs:{id:"_1-3-常见服务器对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-常见服务器对比"}},[t._v("#")]),t._v(" 1.3 常见服务器对比")]),t._v(" "),a("h4",{attrs:{id:"_1-iis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-iis"}},[t._v("#")]),t._v(" 1）IIS")]),t._v(" "),a("p",[t._v("全称 Internet Information Services，即互联网信息服务，是由微软公司提供的基于 Windows 系统的互联网基本服务，但 Windows 不适合做服务器。")]),t._v(" "),a("h4",{attrs:{id:"_2-tomcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-tomcat"}},[t._v("#")]),t._v(" 2）Tomcat")]),t._v(" "),a("p",[t._v("Tomcat 是一个运行 Servlet 和 JSP 的 Web 应用软件，深受 Java 爱好者的喜爱，较为流行，但是 Tomcat 天生是一个重量级的 Web 服务器，对静态文件和高并发的处理比较弱。")]),t._v(" "),a("h4",{attrs:{id:"_3-apache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-apache"}},[t._v("#")]),t._v(" 3）Apache")]),t._v(" "),a("p",[t._v("它出现的时间太久了，在其兴起的年代互联网产业规模远不如今天，它被设计成一个重量级的、不支持高并发的 Web 服务器。")]),t._v(" "),a("h4",{attrs:{id:"_4-lighttpd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-lighttpd"}},[t._v("#")]),t._v(" 4）Lighttpd")]),t._v(" "),a("p",[t._v("它和 Nginx 一样，都是轻量级、高性能的 Web 服务器，欧美的业界开发者比较钟爱 Lighttpd，而国内的公司更多的青睐 Nginx。")]),t._v(" "),a("p",[t._v("其他的服务器还有 Google Servers，Weblogic, Webshpere(IBM)...")]),t._v(" "),a("h4",{attrs:{id:"_5-nginx-优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-nginx-优点"}},[t._v("#")]),t._v(" 5）Nginx 优点")]),t._v(" "),a("ul",[a("li",[t._v("速度快，并发高：Nginx 采用了多进程和 I/O 多路复用(epoll)的底层实现")]),t._v(" "),a("li",[t._v("配置简单，扩展性强")]),t._v(" "),a("li",[t._v("高可靠性：采用多进程模式运行，有一个 master 主进程和 N 多个 worker 进程")]),t._v(" "),a("li",[t._v("热部署：可以在 Nginx 不停止的情况下，对 Nginx 进行文件升级、更新配置和更换日志文件等功能")]),t._v(" "),a("li",[t._v("成本低，BSD 许可证")])]),t._v(" "),a("h3",{attrs:{id:"_1-4-nginx-功能特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-nginx-功能特性"}},[t._v("#")]),t._v(" 1.4 Nginx 功能特性")]),t._v(" "),a("p",[t._v('其基本功能服务从大体上归纳为"基本HTTP服务"、“高级HTTP服务”和"邮件服务"等三大类。')]),t._v(" "),a("h4",{attrs:{id:"_1-4-1-nginx-常用的功能模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-nginx-常用的功能模块"}},[t._v("#")]),t._v(" 1.4.1 Nginx 常用的功能模块")]),t._v(" "),a("ul",[a("li",[t._v("静态资源部署")]),t._v(" "),a("li",[t._v("Rewrite地址重写")]),t._v(" "),a("li",[t._v("反向代理")]),t._v(" "),a("li",[t._v("负载均衡：轮询、加权轮询、ip_hash、url_hash、fair")]),t._v(" "),a("li",[t._v("Web 缓存")]),t._v(" "),a("li",[t._v("环境部署：高可用的环境")]),t._v(" "),a("li",[t._v("用户认证模块")])]),t._v(" "),a("blockquote",[a("p",[t._v("这些模块需要重点学习")])]),t._v(" "),a("h4",{attrs:{id:"_1-4-2-nginx-核心组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-nginx-核心组成"}},[t._v("#")]),t._v(" 1.4.2 Nginx 核心组成")]),t._v(" "),a("ul",[a("li",[t._v("nginx 二进制可执行文件")]),t._v(" "),a("li",[t._v("nginx.conf 配置文件")]),t._v(" "),a("li",[t._v("error.log 错误的日志记录")]),t._v(" "),a("li",[t._v("access.log 访问日志记录")])]),t._v(" "),a("h2",{attrs:{id:"_2-nginx-环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-nginx-环境准备"}},[t._v("#")]),t._v(" 2. Nginx 环境准备")]),t._v(" "),a("h3",{attrs:{id:"_2-1-源码安装所需的环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-源码安装所需的环境"}},[t._v("#")]),t._v(" 2.1 源码安装所需的环境")]),t._v(" "),a("ul",[a("li",[t._v("gcc："),a("code",[t._v("yum install -y gcc")])]),t._v(" "),a("li",[t._v("PCRE：正则表达式库，"),a("code",[t._v("yum install -y pcre pcre-devel")])]),t._v(" "),a("li",[t._v("zlib：提供了压缩算法，"),a("code",[t._v("yum install -y zlib zlib-devel")])]),t._v(" "),a("li",[t._v("OpenSSL：用于安全通信，"),a("code",[t._v("yum install -y openssl openssl-devel")])])]),t._v(" "),a("p",[t._v("建议关闭防火墙：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("systemctl stop firewalld      关闭运行的防火墙，系统重新启动后，防火墙将重新打开\nsystemctl disable firewalld   永久关闭防火墙，，系统重新启动后，防火墙依然关闭\nsystemctl status firewalld\t 查看防火墙状态\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("确认停用 selinux：")]),t._v(" "),a("p",[t._v("虽然 selinux 会让系统跟安全，但学习 nginx 会有很多设置，关闭它可以防止趟坑。可以通过 "),a("code",[t._v("sestatus")]),t._v(" 查看状态，如果不是 disabled 状态的话们可以设置 "),a("code",[t._v("SELINUX=disabled")]),t._v(" 并重启：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/selinux/config\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/1581419902873.png",alt:"1581419902873"}}),t._v(" "),a("h3",{attrs:{id:"_2-2-nginx-的源码简单安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-nginx-的源码简单安装"}},[t._v("#")]),t._v(" 2.2 Nginx 的源码简单安装")]),t._v(" "),a("ol",[a("li",[t._v("在官网找到某个版本的下载地址：")])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://nginx.org/download/nginx-1.16.1.tar.gz\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("建议将下载的资源进行包管理")])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p nginx/core\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" nginx-1.16.1.tar.gz nginx/core\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("解压缩")])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xzf nginx-1.16.1.tar.gz\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("进入资源文件，发现 configure 并执行")])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./configure\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("编译并安装")])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("默认的安装地址是 "),a("code",[t._v("/usr/local/nginx")]),t._v("，进入后有一个 "),a("code",[t._v("sbin")]),t._v(" 文件夹，进入后启动里面的 "),a("code",[t._v("nginx")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./nginx\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("此时在浏览器中输入服务器的 URL 便可以看到 Nginx 的欢迎页面。如果看不到，看一下防火墙关了没。")]),t._v(" "),a("h3",{attrs:{id:"_2-3-yum-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-yum-安装"}},[t._v("#")]),t._v(" 2.3 yum 安装")]),t._v(" "),a("p",[t._v("这里不再介绍")]),t._v(" "),a("h3",{attrs:{id:"_2-4-nginx-的源码复杂安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-nginx-的源码复杂安装"}},[t._v("#")]),t._v(" 2.4 Nginx 的源码复杂安装")]),t._v(" "),a("p",[t._v("与简单安装不同的地方在于第一步的 "),a("code",[t._v("./configure")]),t._v("，它可以手动加上编译参数来进行设置，这里讲一下有哪些参数可以进行设置")]),t._v(" "),a("p",[t._v("这些配置大致分成三大类：")]),t._v(" "),a("ul",[a("li",[t._v("PATH，是和路径相关的配置信息")]),t._v(" "),a("li",[t._v("with，是启动模块，通常用于添加第三方模块的支持，默认是关闭的")]),t._v(" "),a("li",[t._v("without，是关闭模块，用于排除掉一些我们不想用的模块，默认是开启的")])]),t._v(" "),a("h4",{attrs:{id:"_2-4-1-一些简单的路径配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-一些简单的路径配置"}},[t._v("#")]),t._v(" 2.4.1 一些简单的路径配置")]),t._v(" "),a("ul",[a("li",[t._v("–prefix=PATH：指向 Nginx 的安装目录，默认值为/usr/local/nginx")]),t._v(" "),a("li",[t._v("--sbin-path=PATH：指向(执行)程序文件(nginx)的路径,默认值为"),a("code",[t._v("<prefix>/sbin/nginx")])]),t._v(" "),a("li",[t._v("--modules-path=PATH：指向 Nginx 动态模块安装目录，默认值为"),a("code",[t._v("<prefix>/modules")])]),t._v(" "),a("li",[t._v("--conf-path=PATH🔥：指向配置文件(nginx.conf)的路径,默认值为"),a("code",[t._v("<prefix>/conf/nginx.conf")])]),t._v(" "),a("li",[t._v("--error-log-path=PATH：指向错误日志文件的路径,默认值为"),a("code",[t._v("prefix>/logs/error.log")])]),t._v(" "),a("li",[t._v("--http-log-path=PATH：指向访问日志文件的路径,默认值为"),a("code",[t._v("<prefix>/logs/access.log")])]),t._v(" "),a("li",[t._v("--pid-path=PATH：指向 Nginx 启动后进行ID的文件路径，默认值为"),a("code",[t._v("<prefix>/logs/nginx.pid")])]),t._v(" "),a("li",[t._v("--lock-path=PATH：指向 Nginx 锁文件的存放路径,默认值为"),a("code",[t._v("<prefix>/logs/nginx.lock")])])]),t._v(" "),a("p",[t._v("要想使用可以通过如下命令：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./configure --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--sbin-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--modules-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/modules "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--conf-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/conf/nginx.conf "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--error-log-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/logs/error.log "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-log-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/logs/access.log "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--pid-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/logs/nginx.pid "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--lock-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/logs/nginx.lock\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h4",{attrs:{id:"_2-4-2-卸载之前安装的-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-卸载之前安装的-nginx"}},[t._v("#")]),t._v(" 2.4.2 卸载之前安装的 nginx")]),t._v(" "),a("ol",[a("li",[t._v("将 nginx 进程关闭："),a("code",[t._v("./nginx -s stop")])]),t._v(" "),a("li",[t._v("将安装的 nginx 进行删除："),a("code",[t._v("rm -rf /usr/local/nginx")])]),t._v(" "),a("li",[t._v("将安装包之前编译的环境清除掉：")])]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/nginx/core/nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回到解压的安装包里面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" clean\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"_2-4-3-卸载后重新安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-3-卸载后重新安装"}},[t._v("#")]),t._v(" 2.4.3 卸载后重新安装")]),t._v(" "),a("p",[t._v("与简单安装的过程一样，只是在运行 "),a("code",[t._v("configure")]),t._v(" 步骤中加入 2.4.1 节的参数配置。")]),t._v(" "),a("h3",{attrs:{id:"_2-5-nginx-目录结构分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-nginx-目录结构分析"}},[t._v("#")]),t._v(" 2.5 Nginx 目录结构分析")]),t._v(" "),a("blockquote",[a("p",[t._v("tree 工具可以方便查看 Centos 系统上的目录结构，可以通过 "),a("code",[t._v("yum install -y tree")]),t._v(" 来安装。")])]),t._v(" "),a("p",[a("code",[t._v("tree /usr/local/nginx")]),t._v(" 查看目录结构：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/1581439634265.png",alt:"1581439634265"}}),t._v(" "),a("ul",[a("li",[t._v("conf：存放 nginx 所有配置文件的目录")])]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("CGI")]),t._v(" "),a("p",[t._v("CGI（Common Gateway Interface）通用网关"),a("strong",[t._v("接口")]),t._v("，主要解决的问题是从客户端发送一个请求和数据，服务端获取到请求和数据后可以调用调用 CGI "),a("strong",[t._v("程序")]),t._v("处理及相应结果给客户端的一种标准规范。CGI 程序实现了 CGI 接口。")])]),t._v(" "),a("p",[t._v("由于 CGI 效率较低，因此又有了 fastcgi、uwcgi 等。在 conf 里面有很多以 "),a("code",[t._v(".default")]),t._v(" 结尾的文件，它是不带 default 的文件的一个备份。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("koi-utf、koi-win、win-utf 是与编码转换相关的配置文件，用于实现从一种编码转换到另一种编码")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("mime.types")]),t._v("：记录的是 HTTP 协议中的 Content-Type 的值和文件后缀名的对应关系")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("nginx.conf")]),t._v("：Nginx 的核心配置文件，非常重要，也是学习重点。")])]),t._v(" "),a("li",[a("p",[t._v("html 里面有自带的两个静态的 html 页面，index.html 是成功访问的默认首页，50x.html 是访问失败后的失败页面。")])]),t._v(" "),a("li",[a("p",[t._v("logs 目录：")]),t._v(" "),a("ul",[a("li",[t._v("access.log：访问日志")]),t._v(" "),a("li",[t._v("error.log：错误日志")]),t._v(" "),a("li",[t._v("nginx.pid：nginx 进程的 PID")])])]),t._v(" "),a("li",[a("p",[t._v("sbin：存放执行程序文件 nginx，他可以用来控制 nginx 的启动和停止等相关的命令。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-6-nginx-服务器启停命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-nginx-服务器启停命令"}},[t._v("#")]),t._v(" 2.6 Nginx 服务器启停命令")]),t._v(" "),a("p",[t._v("接下来我们要学习的是如何启动、重启和停止 Nginx 的服务。有多种方式，我们只学习两种：")]),t._v(" "),a("ul",[a("li",[t._v("Nginx 服务的信号控制")]),t._v(" "),a("li",[t._v("Nginx 的命令行控制【日常开发常用】")])]),t._v(" "),a("h4",{attrs:{id:"_2-6-1-nginx-服务的信号控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-1-nginx-服务的信号控制"}},[t._v("#")]),t._v(" 2.6.1 Nginx 服务的信号控制")]),t._v(" "),a("p",[t._v("Nginx "),a("strong",[t._v("默认采用的是多进程的方式来工作")]),t._v("的，可以通过 "),a("code",[t._v("ps -ef | grep nginx")]),t._v(" 来查看它的进程：")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/image-20220427124058332.png",alt:"image-20220427124058332"}}),t._v(" "),a("p",[t._v("可以看到 nginx 进程"),a("strong",[t._v("包含一个 master 进程与多个 worker 进程")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("master 进程主要用来管理worker进程，包含接收外界的信息，并将接收到的信号发送给各个worker进程，监控worker进程的状态，当worker进程出现异常退出后，会自动重新启动新的worker进程。")]),t._v(" "),a("li",[t._v("worker进程则是专门用来处理用户请求的，各个worker进程之间是平等的并且相互独立，处理请求的机会也是一样的。")])]),t._v(" "),a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/1581444603231.png",alt:"1581444603231"}}),t._v(" "),a("p",[t._v("我们作为管理员，只需给 master 发送信号就能控制 nginx。这需要 master 的进程 pid 和信号。")]),t._v(" "),a("h5",{attrs:{id:"如何得知-master-的-pid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何得知-master-的-pid"}},[t._v("#")]),t._v(" 如何得知 master 的 pid？")]),t._v(" "),a("ul",[a("li",[t._v("方式 1："),a("code",[t._v("ps -ef | grep nginx")])]),t._v(" "),a("li",[t._v("方式 2：查看 nginx 目录下的 nginx.pid 文件")])]),t._v(" "),a("h5",{attrs:{id:"有哪些信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有哪些信号"}},[t._v("#")]),t._v(" 有哪些信号？")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("信号")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("TERM/INT")]),t._v(" "),a("td",[t._v("立即关闭整个服务")])]),t._v(" "),a("tr",[a("td",[t._v("QUIT")]),t._v(" "),a("td",[t._v('"优雅"地关闭整个服务')])]),t._v(" "),a("tr",[a("td",[t._v("HUP")]),t._v(" "),a("td",[t._v("重读配置文件并使用服务对新配置项生效")])]),t._v(" "),a("tr",[a("td",[t._v("USR1")]),t._v(" "),a("td",[t._v("重新打开日志文件，可以用来进行日志切割")])]),t._v(" "),a("tr",[a("td",[t._v("USR2")]),t._v(" "),a("td",[t._v("平滑升级到最新版的 nginx，会重启 master 和 worker。"),a("strong",[t._v("用于在保持 nginx 服务器不重新启动的情况下升级 nginx")]),t._v("。")])]),t._v(" "),a("tr",[a("td",[t._v("WINCH")]),t._v(" "),a("td",[t._v("让所有 work 进程不再接收处理新连接，相当于给 work 进程发送 QUIT 指令。注意 master 不会被关掉。")])])])]),t._v(" "),a("p",[t._v("调用命令为 "),a("code",[t._v("kill -signal PID")])]),t._v(" "),a("h4",{attrs:{id:"_2-6-2-nginx-的命令行控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-2-nginx-的命令行控制"}},[t._v("#")]),t._v(" 2.6.2 Nginx 的命令行控制")]),t._v(" "),a("p",[t._v("此方式是通过 "),a("code",[t._v("sbin")]),t._v(" 下的可执行文件 "),a("code",[t._v("nginx")]),t._v(" 来进行 Nginx 状态的控制。我们可以通过 "),a("code",[t._v("nginx -h")]),t._v(" 来查看都有哪些参数可以用：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@hspEdu01 sbin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./nginx -h")]),t._v("\nnginx version: nginx/1.16.1\nUsage: nginx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-?hvVtTq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-s signal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-p prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-g directives"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nOptions:\n  -?,-h         "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" this "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("\n  -v            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" show version and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n  -V            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" show version and configure options "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n  -t            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" configuration and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n  -T            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" configuration, dump it and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n  -q            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" suppress non-error messages during configuration testing\n  -s signal     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" send signal to a master process: stop, quit, reopen, reload\n  -p prefix     "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" prefix path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: /usr/local/nginx/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -c filename   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" configuration "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: /usr/local/nginx/conf/nginx.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -g directives "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" global directives out of configuration "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("ul",[a("li",[t._v("-s：signal 信号，后面可以跟：\n"),a("ul",[a("li",[t._v("stop：快速关闭，类似于 TERM/INT 信号的作用")]),t._v(" "),a("li",[t._v("quit：优雅的关闭，类似于 QUIT 信号的作用")]),t._v(" "),a("li",[t._v("reopen：重新打开日志文件类似于 USR1 信号的作用")]),t._v(" "),a("li",[t._v("reload：类似于HUP信号的作用")])])]),t._v(" "),a("li",[t._v("-t：测试 nginx 的配置文件语法是否正确并退出")])]),t._v(" "),a("h3",{attrs:{id:"_2-7-nginx-服务器版本升级和新增模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-nginx-服务器版本升级和新增模块"}},[t._v("#")]),t._v(" 2.7 Nginx 服务器版本升级和新增模块")]),t._v(" "),a("p",[t._v("最简单的做法是停掉当前 nginx 服务，然后开一个新的。但这样会导致一段时间内用户无法访问服务器。因此我们需要用到 nginx 服务器提供的平滑升级功能。")]),t._v(" "),a("p",[a("strong",[t._v("需求")]),t._v("：Nginx 的版本最开始使用的是 Nginx-1.14.2，由于服务升级，需要将 Nginx 的版本升级到 Nginx-1.16.1,要求 Nginx 不能中断提供服务。")]),t._v(" "),a("p",[t._v("有两种升级方式：使用 nginx 服务信号完成 nginx 升级；使用 nginx 安装目录的 make 命令完成升级。这里不再详细介绍。")]),t._v(" "),a("h2",{attrs:{id:"_3-nginx-核心配置文件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-nginx-核心配置文件结构"}},[t._v("#")]),t._v(" 3. Nginx 核心配置文件结构")]),t._v(" "),a("p",[t._v("默认在 "),a("code",[t._v("/usr/local/nginx/conf/nginx.conf")]),t._v("，这一节我们学习一下 nginx.conf 的内容和基本配置方法。我们看一下它里面的内容（删掉了注释信息）：")]),t._v(" "),a("div",{staticClass:"language-nginx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("       mime.types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v("  application/octet-stream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  localhost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("ul",[a("li",[t._v("格式大都是 "),a("code",[t._v("指令名 指令值")])]),t._v(" "),a("li",[t._v("最外层是"),a("strong",[t._v("全局块")]),t._v("，主要设置 Nginx 服务器整体运行的配置指令")]),t._v(" "),a("li",[a("strong",[t._v("events 块")]),t._v("，用于配置与用户的网络连接，这一部分对 Nginx 服务器的性能影响较大")]),t._v(" "),a("li",[a("strong",[t._v("http 块")]),t._v("，是 Nginx 服务器配置中的重要部分。里面可以配置多个 server  块，它是 Nginx 配置和虚拟主机相关的内容。")]),t._v(" "),a("li",[a("strong",[t._v("server 块")]),t._v("，有一个 "),a("code",[t._v("listen")]),t._v(" 和 "),a("code",[t._v("server_name")]),t._v(" 指令，表示这个 server 块所要拦截的请求。当请求过来后，处理是看 location 块。")]),t._v(" "),a("li",[a("strong",[t._v("location 块")]),t._v("，基于 Nginx 服务器接收请求字符串与 location 后面的值进行匹配，对特定请求进行处理。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("nginx.conf 小结")]),t._v(" "),a("ul",[a("li",[t._v("nginx.conf 配置文件中默认有三大块：全局块、events 块、http 块")]),t._v(" "),a("li",[t._v("http 块中可以配置多个 server 块，每个 server 块又可以配置多个 location 块")])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-全局块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-全局块"}},[t._v("#")]),t._v(" 3.1 全局块")]),t._v(" "),a("h4",{attrs:{id:"_1-user-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-user-指令"}},[t._v("#")]),t._v(" 1）user 指令")]),t._v(" "),a("p",[t._v("用于配置运行 Nginx 服务器的 worker 进程的用户和用户组。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("user user [group]")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("nobody")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("全局块")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("该属性也可以在编译的时候指定，语法如下 "),a("code",[t._v("./configure --user=user --group=group")]),t._v("，如果两个地方都进行了设置，最终生效的是配置文件中的配置。")])]),t._v(" "),a("p",[t._v("指令的使用步骤：")]),t._v(" "),a("p",[t._v("先通过 "),a("code",[t._v("useradd www")]),t._v(" 新加一个名为 www 的用户，然后在 nginx.conf 中加上：")]),t._v(" "),a("div",{staticClass:"language-nginx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[t._v("user www\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("完成之后在 "),a("code",[t._v("./nginx -t")]),t._v(" 检查一下，成功后可以 "),a("code",[t._v("./nginx -s reload")]),t._v(" 重新加载。")]),t._v(" "),a("p",[t._v("使用 user 指令可以指定启动运行工作进程的用户及用户组，这样对于系统的权限访问控制的更加精细，也更加安全。比如 www 的 nginx 工作进程无法访问 root 的文件。")]),t._v(" "),a("h4",{attrs:{id:"_2-work-process-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-work-process-指令"}},[t._v("#")]),t._v(" 2）work process 指令")]),t._v(" "),a("p",[a("strong",[t._v("master_process")]),t._v(" 指令用来指定是否开启工作进程，指令值为 on/off，默认 on。这个指令修改后需要重新启动。")]),t._v(" "),a("p",[a("strong",[t._v("worker_processes")]),t._v(" 指令用于配置 Nginx 生成工作进程的数量，这个是 Nginx 服务器实现并发处理服务的关键所在。")]),t._v(" "),a("blockquote",[a("p",[t._v("理论上来说 workder process 的值越大，可以支持的并发处理量也越多，但事实上这个值的设定是需要受到来自服务器自身的限制，"),a("strong",[t._v("建议将该值和服务器 CPU 的内核数保存一致")]),t._v("。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("worker_processes     num/auto;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("全局块")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-其他指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-其他指令"}},[t._v("#")]),t._v(" 3）其他指令")]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("daemon")]),t._v("：设定 Nginx 是否以守护进程的方式启动。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("daemon on|off;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("daemon on;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("全局块")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("守护式进程是linux后台执行的一种服务进程，特点是"),a("strong",[t._v("独立于控制终端，不会随着终端关闭而停止")]),t._v("。")])]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("pid")]),t._v("：用来配置 Nginx 当前 master 进程的 pid 存储的文件路径。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("pid file;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("默认为 /usr/local/nginx/logs/nginx.pid")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("全局块")])])])]),t._v(" "),a("p",[t._v("该属性可以通过 "),a("code",[t._v("./configure --pid-path=PATH")]),t._v(" 来指定")]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("error_log")]),t._v("：用来配置 Nginx 的错误日志存放路径")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("error_log  file [日志级别];")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("error_log logs/error.log error;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("全局块、http、server、location")])])])]),t._v(" "),a("p",[t._v("该属性可以通过 "),a("code",[t._v("./configure --error-log-path=PATH")]),t._v(" 来指定。")]),t._v(" "),a("p",[t._v("其中日志级别的值有 debug|info|notice|warn|error|crit|alert|emerg，建议大家设置的时候不要设置成 info 以下的等级，否则会带来大量的磁盘 I/O 消耗。")]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("include")]),t._v("：用来引入其他配置文件，使 Nginx 的配置更加灵活")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("include file;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("无")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("any")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-2-events-块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-events-块"}},[t._v("#")]),t._v(" 3.2 events 块")]),t._v(" "),a("h4",{attrs:{id:"_1-accept-mutex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-accept-mutex"}},[t._v("#")]),t._v(" 1）accept_mutex")]),t._v(" "),a("p",[t._v("用来设置 Nginx 网络连接序列化")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("accept_mutex on|off;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("accept_mutex on;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("events")])])])]),t._v(" "),a("p",[t._v('这个配置主要可以用来解决常说的"'),a("strong",[t._v("惊群")]),t._v('"问题。大致是说，如果设置为 off，当客户端发来一个请求，那所有 worker 同时被惊醒并竞争，最终只会有一个进程可以获取到连接，如果每次唤醒的进程数目太多，就会影响到 nginx 的整体性能。如果设置为 on，将会对多个 nginx 进程接收连接进行序列号，一个个来唤醒接收，防止了多个进程对连接的争抢。')]),t._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/1581566971955.png",alt:"1581566971955"}}),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("具体选 on 还是 off 取决于具体的生产环境")]),t._v("，当多个骨头丢过来时，设置为 off 从而同时惊醒所有狗来竞争反而效率会高。")])]),t._v(" "),a("h4",{attrs:{id:"_2-multi-accept"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-multi-accept"}},[t._v("#")]),t._v(" 2）multi_accept")]),t._v(" "),a("p",[t._v("用来设置是否允许同时接收多个网络连接")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("multi_accept on|off;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("multi_accept off;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("events")])])])]),t._v(" "),a("p",[t._v("如果 multi_accept 被禁止了，nginx 一个工作进程只能同时接受一个新的连接。否则，一个工作进程可以同时接受所有的新连接。"),a("strong",[t._v("建议设为 on")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"_3-worker-connections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-worker-connections"}},[t._v("#")]),t._v(" 3）worker_connections")]),t._v(" "),a("p",[t._v("用来配置单个 worker 进程最大的连接数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("worker_connections number;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("worker_commections 512;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("events")])])])]),t._v(" "),a("p",[t._v("这里的连接数不仅仅包括和前端用户建立的连接数，而是包括所有可能的连接数。另外，number 值不能大于操作系统支持打开的最大文件句柄数量。")]),t._v(" "),a("h4",{attrs:{id:"_4-use"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-use"}},[t._v("#")]),t._v(" 4）use")]),t._v(" "),a("p",[t._v("设置 Nginx 选择哪种事件驱动来处理网络消息")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("use  method;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("根据操作系统定")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("events")])])])]),t._v(" "),a("p",[t._v("注意：此处所选择事件处理模型是 Nginx 优化部分的一个重要内容，method的可选值有 select/poll/epoll/kqueue 等。"),a("strong",[t._v("建议设置为 epoll")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("Linux kernel 在 2.6 以上才支持 epoll 函数。")])]),t._v(" "),a("h4",{attrs:{id:"_5-events-块配置实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-events-块配置实例"}},[t._v("#")]),t._v(" 5）events 块配置实例")]),t._v(" "),a("p",[t._v("在 nginx.conf 中配置：")]),t._v(" "),a("div",{staticClass:"language-nginx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("accept_mutex")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("multi_accept")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_commections")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" epoll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("启动测试：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./nginx -t\n./nginx -s reload\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-3-http-块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-http-块"}},[t._v("#")]),t._v(" 3.3 http 块")]),t._v(" "),a("h4",{attrs:{id:"_1-定义-mime-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义-mime-type"}},[t._v("#")]),t._v(" 1）定义 MIME-Type")]),t._v(" "),a("p",[t._v("浏览器中可以显示的内容有 HTML、XML、GIF 等种类繁多的文件、媒体等资源，"),a("strong",[t._v("浏览器为了区分这些资源，就需要使用 MIME Type")]),t._v("。所以说 MIME Type 是网络资源的媒体类型。Nginx 作为web服务器，也需要能够识别前端请求的资源类型。")]),t._v(" "),a("p",[t._v("在 Nginx 的配置文件中，默认有两行配置：")]),t._v(" "),a("div",{staticClass:"language-nginx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" mime.types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" application/octet-stream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("mime.types 文件记录了不同的 MIME Type 和文件类型的对应关系")]),t._v(" "),a("li",[a("strong",[t._v("default_type")]),t._v(" 指令用来配置 Nginx 响应前端请求默认的 MIME 类型：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("default_type mime-type;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("default_type text/plain；")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("http、server、location")])])])]),t._v(" "),a("p",[a("strong",[t._v("示例")]),t._v("：有些时候请求某些接口需要返回指定的文本字符串，如果逻辑非常简单或者固定的字符串，那么可以使用 nginx 快速实现，这样就不用编写程序响应请求了：")]),t._v(" "),a("div",{staticClass:"language-nginx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /get_text")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这里也可以设置成 text/plain")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" text/html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is nginx\'s text"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /get_json")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v(" application/json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"name":"TOM","age":18}\'')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h4",{attrs:{id:"_2-自定义服务日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-自定义服务日志"}},[t._v("#")]),t._v(" 2）自定义服务日志")]),t._v(" "),a("p",[t._v("Nginx 中日志的类型分 access.log、error.log")]),t._v(" "),a("ul",[a("li",[t._v("access.log：用来记录用户所有的访问请求")]),t._v(" "),a("li",[t._v("error.log：记录 nginx 本身运行时的错误信息，不会记录用户的访问请求")])]),t._v(" "),a("p",[t._v("Nginx 服务器"),a("strong",[t._v("支持对服务日志的格式、大小、输出等进行设置")]),t._v("，需要使用到两个指令，分别是 access_log 和 log_format 指令。")]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("access_log 指令")]),t._v("用来设置用户访问日志的相关属性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("access_log path[format[buffer=size]]")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("access_log logs/access.log combined;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[a("code",[t._v("http")]),t._v(", "),a("code",[t._v("server")]),t._v(", "),a("code",[t._v("location")])])])])]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("log_format 指令")]),t._v("用来指定日志的输出格式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("log_format name [escape=default|json|none] string....;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v('log_format combined "...";')])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("http")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-其他配置指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-其他配置指令"}},[t._v("#")]),t._v(" 3）其他配置指令")]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("sendfile")]),t._v("：设置 Nginx 服务器是否使用 Linux 函数 "),a("code",[t._v("sendfile()")]),t._v(" 传输文件，该属性可以大大提高 Nginx 处理静态资源的性能，"),a("strong",[t._v("建议为 on")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("sendfile on|off；")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("sendfile off;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("http、server、location")])])])]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("keepalive_timeout")]),t._v("：设置长连接的超时时间")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("keepalive_timeout time;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("keepalive_timeout 75s;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("http、server、location")])])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("为什么要使用 keepalive？")]),t._v(" "),a("p",[t._v("我们都知道 HTTP 是一种无状态协议，客户端向服务端发送一个 TCP 请求，服务端响应完毕后断开连接。")]),t._v(" "),a("p",[t._v("如何客户端向服务端发送多个请求，每个请求都需要重新创建一次连接，效率相对来说比较多，使用 keepalive 模式，可以告诉服务器端在处理完一个请求后保持这个 TCP 连接的打开状态，若接收到来自这个客户端的其他请求，服务端就会利用这个未被关闭的连接，而不需要重新创建一个新连接，提升效率，但是这个连接也不能一直保持，这样的话，连接如果过多，也会是服务端的性能下降，这个时候就需要我们进行设置其的超时时间。")])]),t._v(" "),a("p",[t._v("🖊 "),a("strong",[t._v("keepalive_requests")]),t._v("：设置一个 keep-alive 连接使用的次数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("语法")]),t._v(" "),a("th",[t._v("keepalive_requests number;")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("默认值")]),t._v(" "),a("td",[t._v("keepalive_requests 100;")])]),t._v(" "),a("tr",[a("td",[t._v("位置")]),t._v(" "),a("td",[t._v("http、server、location")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-4-server-块和-location-块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-server-块和-location-块"}},[t._v("#")]),t._v(" 3.4 server 块和 location 块")]),t._v(" "),a("blockquote",[a("p",[t._v("这部分会在后面对 Nginx 的功能进行详细讲解时会继续学习。本节我们主要来认识下 Nginx 默认的 nginx.conf 中的相关内容，以及 server 块与 location 块在使用的时候需要注意的一些内容。")])]),t._v(" "),a("div",{staticClass:"language-nginx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  localhost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       \n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("  /50x.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /50x.html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("ul",[a("li",[t._v("location 下面的 "),a("code",[t._v("root")]),t._v(" 指令代表资源所在的目录，"),a("code",[t._v("index")]),t._v(" 指令可以设置多个值，它会从前往后直到找到一个为止。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);